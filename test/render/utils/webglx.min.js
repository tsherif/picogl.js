/*!
 * The MIT License (MIT)
 * 
 * Copyright (c) 2020 Tarek Sherif
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["WebGLX"] = factory();
	else
		root["WebGLX"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/webglx.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/webgl-api.js":
/*!**************************!*\
  !*** ./src/webgl-api.js ***!
  \**************************/
/*! exports provided: WEBGL_ENUMS, WEBGL2_ENUMS, WEBGL2_PARAMETER_DEFAULTS, EXTENSION_ENUMS, FUNCTIONS, WEBGL2_IMPLICIT_EXTENSIONS, WEBGL_EXTENSION_FUNCTIONS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WEBGL_ENUMS", function() { return WEBGL_ENUMS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WEBGL2_ENUMS", function() { return WEBGL2_ENUMS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WEBGL2_PARAMETER_DEFAULTS", function() { return WEBGL2_PARAMETER_DEFAULTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EXTENSION_ENUMS", function() { return EXTENSION_ENUMS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FUNCTIONS", function() { return FUNCTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WEBGL2_IMPLICIT_EXTENSIONS", function() { return WEBGL2_IMPLICIT_EXTENSIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WEBGL_EXTENSION_FUNCTIONS", function() { return WEBGL_EXTENSION_FUNCTIONS; });
const WEBGL_ENUMS = {
    DEPTH_BUFFER_BIT: 0x00000100,
    STENCIL_BUFFER_BIT: 0x00000400,
    COLOR_BUFFER_BIT: 0x00004000,
    POINTS: 0x0000,
    LINES: 0x0001,
    LINE_LOOP: 0x0002,
    LINE_STRIP: 0x0003,
    TRIANGLES: 0x0004,
    TRIANGLE_STRIP: 0x0005,
    TRIANGLE_FAN: 0x0006,
    ZERO: 0,
    ONE: 1,
    SRC_COLOR: 0x0300,
    ONE_MINUS_SRC_COLOR: 0x0301,
    SRC_ALPHA: 0x0302,
    ONE_MINUS_SRC_ALPHA: 0x0303,
    DST_ALPHA: 0x0304,
    ONE_MINUS_DST_ALPHA: 0x0305,
    DST_COLOR: 0x0306,
    ONE_MINUS_DST_COLOR: 0x0307,
    SRC_ALPHA_SATURATE: 0x0308,
    FUNC_ADD: 0x8006,
    BLEND_EQUATION: 0x8009,
    BLEND_EQUATION_RGB: 0x8009,
    BLEND_EQUATION_ALPHA: 0x883D,
    FUNC_SUBTRACT: 0x800A,
    FUNC_REVERSE_SUBTRACT: 0x800B,
    BLEND_DST_RGB: 0x80C8,
    BLEND_SRC_RGB: 0x80C9,
    BLEND_DST_ALPHA: 0x80CA,
    BLEND_SRC_ALPHA: 0x80CB,
    CONSTANT_COLOR: 0x8001,
    ONE_MINUS_CONSTANT_COLOR: 0x8002,
    CONSTANT_ALPHA: 0x8003,
    ONE_MINUS_CONSTANT_ALPHA: 0x8004,
    BLEND_COLOR: 0x8005,
    ARRAY_BUFFER: 0x8892,
    ELEMENT_ARRAY_BUFFER: 0x8893,
    ARRAY_BUFFER_BINDING: 0x8894,
    ELEMENT_ARRAY_BUFFER_BINDING: 0x8895,
    STREAM_DRAW: 0x88E0,
    STATIC_DRAW: 0x88E4,
    DYNAMIC_DRAW: 0x88E8,
    BUFFER_SIZE: 0x8764,
    BUFFER_USAGE: 0x8765,
    CURRENT_VERTEX_ATTRIB: 0x8626,
    FRONT: 0x0404,
    BACK: 0x0405,
    FRONT_AND_BACK: 0x0408,
    CULL_FACE: 0x0B44,
    BLEND: 0x0BE2,
    DITHER: 0x0BD0,
    STENCIL_TEST: 0x0B90,
    DEPTH_TEST: 0x0B71,
    SCISSOR_TEST: 0x0C11,
    POLYGON_OFFSET_FILL: 0x8037,
    SAMPLE_ALPHA_TO_COVERAGE: 0x809E,
    SAMPLE_COVERAGE: 0x80A0,
    NO_ERROR: 0,
    INVALID_ENUM: 0x0500,
    INVALID_VALUE: 0x0501,
    INVALID_OPERATION: 0x0502,
    OUT_OF_MEMORY: 0x0505,
    CW: 0x0900,
    CCW: 0x0901,
    LINE_WIDTH: 0x0B21,
    ALIASED_POINT_SIZE_RANGE: 0x846D,
    ALIASED_LINE_WIDTH_RANGE: 0x846E,
    CULL_FACE_MODE: 0x0B45,
    FRONT_FACE: 0x0B46,
    DEPTH_RANGE: 0x0B70,
    DEPTH_WRITEMASK: 0x0B72,
    DEPTH_CLEAR_VALUE: 0x0B73,
    DEPTH_FUNC: 0x0B74,
    STENCIL_CLEAR_VALUE: 0x0B91,
    STENCIL_FUNC: 0x0B92,
    STENCIL_FAIL: 0x0B94,
    STENCIL_PASS_DEPTH_FAIL: 0x0B95,
    STENCIL_PASS_DEPTH_PASS: 0x0B96,
    STENCIL_REF: 0x0B97,
    STENCIL_VALUE_MASK: 0x0B93,
    STENCIL_WRITEMASK: 0x0B98,
    STENCIL_BACK_FUNC: 0x8800,
    STENCIL_BACK_FAIL: 0x8801,
    STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802,
    STENCIL_BACK_PASS_DEPTH_PASS: 0x8803,
    STENCIL_BACK_REF: 0x8CA3,
    STENCIL_BACK_VALUE_MASK: 0x8CA4,
    STENCIL_BACK_WRITEMASK: 0x8CA5,
    VIEWPORT: 0x0BA2,
    SCISSOR_BOX: 0x0C10,
    COLOR_CLEAR_VALUE: 0x0C22,
    COLOR_WRITEMASK: 0x0C23,
    UNPACK_ALIGNMENT: 0x0CF5,
    PACK_ALIGNMENT: 0x0D05,
    MAX_TEXTURE_SIZE: 0x0D33,
    MAX_VIEWPORT_DIMS: 0x0D3A,
    SUBPIXEL_BITS: 0x0D50,
    RED_BITS: 0x0D52,
    GREEN_BITS: 0x0D53,
    BLUE_BITS: 0x0D54,
    ALPHA_BITS: 0x0D55,
    DEPTH_BITS: 0x0D56,
    STENCIL_BITS: 0x0D57,
    POLYGON_OFFSET_UNITS: 0x2A00,
    POLYGON_OFFSET_FACTOR: 0x8038,
    TEXTURE_BINDING_2D: 0x8069,
    SAMPLE_BUFFERS: 0x80A8,
    SAMPLES: 0x80A9,
    SAMPLE_COVERAGE_VALUE: 0x80AA,
    SAMPLE_COVERAGE_INVERT: 0x80AB,
    COMPRESSED_TEXTURE_FORMATS: 0x86A3,
    DONT_CARE: 0x1100,
    FASTEST: 0x1101,
    NICEST: 0x1102,
    GENERATE_MIPMAP_HINT: 0x8192,
    BYTE: 0x1400,
    UNSIGNED_BYTE: 0x1401,
    SHORT: 0x1402,
    UNSIGNED_SHORT: 0x1403,
    INT: 0x1404,
    UNSIGNED_INT: 0x1405,
    FLOAT: 0x1406,
    DEPTH_COMPONENT: 0x1902,
    ALPHA: 0x1906,
    RGB: 0x1907,
    RGBA: 0x1908,
    LUMINANCE: 0x1909,
    LUMINANCE_ALPHA: 0x190A,
    UNSIGNED_SHORT_4_4_4_4: 0x8033,
    UNSIGNED_SHORT_5_5_5_1: 0x8034,
    UNSIGNED_SHORT_5_6_5: 0x8363,
    FRAGMENT_SHADER: 0x8B30,
    VERTEX_SHADER: 0x8B31,
    MAX_VERTEX_ATTRIBS: 0x8869,
    MAX_VERTEX_UNIFORM_VECTORS: 0x8DFB,
    MAX_VARYING_VECTORS: 0x8DFC,
    MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8B4D,
    MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8B4C,
    MAX_TEXTURE_IMAGE_UNITS: 0x8872,
    MAX_FRAGMENT_UNIFORM_VECTORS: 0x8DFD,
    SHADER_TYPE: 0x8B4F,
    DELETE_STATUS: 0x8B80,
    LINK_STATUS: 0x8B82,
    VALIDATE_STATUS: 0x8B83,
    ATTACHED_SHADERS: 0x8B85,
    ACTIVE_UNIFORMS: 0x8B86,
    ACTIVE_ATTRIBUTES: 0x8B89,
    SHADING_LANGUAGE_VERSION: 0x8B8C,
    CURRENT_PROGRAM: 0x8B8D,
    NEVER: 0x0200,
    LESS: 0x0201,
    EQUAL: 0x0202,
    LEQUAL: 0x0203,
    GREATER: 0x0204,
    NOTEQUAL: 0x0205,
    GEQUAL: 0x0206,
    ALWAYS: 0x0207,
    KEEP: 0x1E00,
    REPLACE: 0x1E01,
    INCR: 0x1E02,
    DECR: 0x1E03,
    INVERT: 0x150A,
    INCR_WRAP: 0x8507,
    DECR_WRAP: 0x8508,
    VENDOR: 0x1F00,
    RENDERER: 0x1F01,
    VERSION: 0x1F02,
    NEAREST: 0x2600,
    LINEAR: 0x2601,
    NEAREST_MIPMAP_NEAREST: 0x2700,
    LINEAR_MIPMAP_NEAREST: 0x2701,
    NEAREST_MIPMAP_LINEAR: 0x2702,
    LINEAR_MIPMAP_LINEAR: 0x2703,
    TEXTURE_MAG_FILTER: 0x2800,
    TEXTURE_MIN_FILTER: 0x2801,
    TEXTURE_WRAP_S: 0x2802,
    TEXTURE_WRAP_T: 0x2803,
    TEXTURE_2D: 0x0DE1,
    TEXTURE: 0x1702,
    TEXTURE_CUBE_MAP: 0x8513,
    TEXTURE_BINDING_CUBE_MAP: 0x8514,
    TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515,
    TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516,
    TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517,
    TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518,
    TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519,
    TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A,
    MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C,
    TEXTURE0: 0x84C0,
    TEXTURE1: 0x84C1,
    TEXTURE2: 0x84C2,
    TEXTURE3: 0x84C3,
    TEXTURE4: 0x84C4,
    TEXTURE5: 0x84C5,
    TEXTURE6: 0x84C6,
    TEXTURE7: 0x84C7,
    TEXTURE8: 0x84C8,
    TEXTURE9: 0x84C9,
    TEXTURE10: 0x84CA,
    TEXTURE11: 0x84CB,
    TEXTURE12: 0x84CC,
    TEXTURE13: 0x84CD,
    TEXTURE14: 0x84CE,
    TEXTURE15: 0x84CF,
    TEXTURE16: 0x84D0,
    TEXTURE17: 0x84D1,
    TEXTURE18: 0x84D2,
    TEXTURE19: 0x84D3,
    TEXTURE20: 0x84D4,
    TEXTURE21: 0x84D5,
    TEXTURE22: 0x84D6,
    TEXTURE23: 0x84D7,
    TEXTURE24: 0x84D8,
    TEXTURE25: 0x84D9,
    TEXTURE26: 0x84DA,
    TEXTURE27: 0x84DB,
    TEXTURE28: 0x84DC,
    TEXTURE29: 0x84DD,
    TEXTURE30: 0x84DE,
    TEXTURE31: 0x84DF,
    ACTIVE_TEXTURE: 0x84E0,
    REPEAT: 0x2901,
    CLAMP_TO_EDGE: 0x812F,
    MIRRORED_REPEAT: 0x8370,
    FLOAT_VEC2: 0x8B50,
    FLOAT_VEC3: 0x8B51,
    FLOAT_VEC4: 0x8B52,
    INT_VEC2: 0x8B53,
    INT_VEC3: 0x8B54,
    INT_VEC4: 0x8B55,
    BOOL: 0x8B56,
    BOOL_VEC2: 0x8B57,
    BOOL_VEC3: 0x8B58,
    BOOL_VEC4: 0x8B59,
    FLOAT_MAT2: 0x8B5A,
    FLOAT_MAT3: 0x8B5B,
    FLOAT_MAT4: 0x8B5C,
    SAMPLER_2D: 0x8B5E,
    SAMPLER_CUBE: 0x8B60,
    VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622,
    VERTEX_ATTRIB_ARRAY_SIZE: 0x8623,
    VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624,
    VERTEX_ATTRIB_ARRAY_TYPE: 0x8625,
    VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886A,
    VERTEX_ATTRIB_ARRAY_POINTER: 0x8645,
    VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889F,
    IMPLEMENTATION_COLOR_READ_TYPE: 0x8B9A,
    IMPLEMENTATION_COLOR_READ_FORMAT: 0x8B9B,
    COMPILE_STATUS: 0x8B81,
    LOW_FLOAT: 0x8DF0,
    MEDIUM_FLOAT: 0x8DF1,
    HIGH_FLOAT: 0x8DF2,
    LOW_INT: 0x8DF3,
    MEDIUM_INT: 0x8DF4,
    HIGH_INT: 0x8DF5,
    FRAMEBUFFER: 0x8D40,
    RENDERBUFFER: 0x8D41,
    RGBA4: 0x8056,
    RGB5_A1: 0x8057,
    RGB565: 0x8D62,
    DEPTH_COMPONENT16: 0x81A5,
    STENCIL_INDEX: 0x1901,
    STENCIL_INDEX8: 0x8D48,
    DEPTH_STENCIL: 0x84F9,
    RENDERBUFFER_WIDTH: 0x8D42,
    RENDERBUFFER_HEIGHT: 0x8D43,
    RENDERBUFFER_INTERNAL_FORMAT: 0x8D44,
    RENDERBUFFER_RED_SIZE: 0x8D50,
    RENDERBUFFER_GREEN_SIZE: 0x8D51,
    RENDERBUFFER_BLUE_SIZE: 0x8D52,
    RENDERBUFFER_ALPHA_SIZE: 0x8D53,
    RENDERBUFFER_DEPTH_SIZE: 0x8D54,
    RENDERBUFFER_STENCIL_SIZE: 0x8D55,
    FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8CD0,
    FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8CD1,
    FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8CD2,
    FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8CD3,
    COLOR_ATTACHMENT0: 0x8CE0,
    DEPTH_ATTACHMENT: 0x8D00,
    STENCIL_ATTACHMENT: 0x8D20,
    DEPTH_STENCIL_ATTACHMENT: 0x821A,
    NONE: 0,
    FRAMEBUFFER_COMPLETE: 0x8CD5,
    FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8CD6,
    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8CD7,
    FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8CD9,
    FRAMEBUFFER_UNSUPPORTED: 0x8CDD,
    FRAMEBUFFER_BINDING: 0x8CA6,
    RENDERBUFFER_BINDING: 0x8CA7,
    MAX_RENDERBUFFER_SIZE: 0x84E8,
    INVALID_FRAMEBUFFER_OPERATION: 0x0506,
    UNPACK_FLIP_Y_WEBGL: 0x9240,
    UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241,
    CONTEXT_LOST_WEBGL: 0x9242,
    UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243,
    BROWSER_DEFAULT_WEBGL: 0x9244,
};

const WEBGL2_ENUMS = {
    READ_BUFFER: 0x0C02,
    UNPACK_ROW_LENGTH: 0x0CF2,
    UNPACK_SKIP_ROWS: 0x0CF3,
    UNPACK_SKIP_PIXELS: 0x0CF4,
    PACK_ROW_LENGTH: 0x0D02,
    PACK_SKIP_ROWS: 0x0D03,
    PACK_SKIP_PIXELS: 0x0D04,
    COLOR: 0x1800,
    DEPTH: 0x1801,
    STENCIL: 0x1802,
    RED: 0x1903,
    RGB8: 0x8051,
    RGBA8: 0x8058,
    RGB10_A2: 0x8059,
    TEXTURE_BINDING_3D: 0x806A,
    UNPACK_SKIP_IMAGES: 0x806D,
    UNPACK_IMAGE_HEIGHT: 0x806E,
    TEXTURE_3D: 0x806F,
    TEXTURE_WRAP_R: 0x8072,
    MAX_3D_TEXTURE_SIZE: 0x8073,
    UNSIGNED_INT_2_10_10_10_REV: 0x8368,
    MAX_ELEMENTS_VERTICES: 0x80E8,
    MAX_ELEMENTS_INDICES: 0x80E9,
    TEXTURE_MIN_LOD: 0x813A,
    TEXTURE_MAX_LOD: 0x813B,
    TEXTURE_BASE_LEVEL: 0x813C,
    TEXTURE_MAX_LEVEL: 0x813D,
    MIN: 0x8007,
    MAX: 0x8008,
    DEPTH_COMPONENT24: 0x81A6,
    MAX_TEXTURE_LOD_BIAS: 0x84FD,
    TEXTURE_COMPARE_MODE: 0x884C,
    TEXTURE_COMPARE_FUNC: 0x884D,
    CURRENT_QUERY: 0x8865,
    QUERY_RESULT: 0x8866,
    QUERY_RESULT_AVAILABLE: 0x8867,
    STREAM_READ: 0x88E1,
    STREAM_COPY: 0x88E2,
    STATIC_READ: 0x88E5,
    STATIC_COPY: 0x88E6,
    DYNAMIC_READ: 0x88E9,
    DYNAMIC_COPY: 0x88EA,
    MAX_DRAW_BUFFERS: 0x8824,
    DRAW_BUFFER0: 0x8825,
    DRAW_BUFFER1: 0x8826,
    DRAW_BUFFER2: 0x8827,
    DRAW_BUFFER3: 0x8828,
    DRAW_BUFFER4: 0x8829,
    DRAW_BUFFER5: 0x882A,
    DRAW_BUFFER6: 0x882B,
    DRAW_BUFFER7: 0x882C,
    DRAW_BUFFER8: 0x882D,
    DRAW_BUFFER9: 0x882E,
    DRAW_BUFFER10: 0x882F,
    DRAW_BUFFER11: 0x8830,
    DRAW_BUFFER12: 0x8831,
    DRAW_BUFFER13: 0x8832,
    DRAW_BUFFER14: 0x8833,
    DRAW_BUFFER15: 0x8834,
    MAX_FRAGMENT_UNIFORM_COMPONENTS: 0x8B49,
    MAX_VERTEX_UNIFORM_COMPONENTS: 0x8B4A,
    SAMPLER_3D: 0x8B5F,
    SAMPLER_2D_SHADOW: 0x8B62,
    FRAGMENT_SHADER_DERIVATIVE_HINT: 0x8B8B,
    PIXEL_PACK_BUFFER: 0x88EB,
    PIXEL_UNPACK_BUFFER: 0x88EC,
    PIXEL_PACK_BUFFER_BINDING: 0x88ED,
    PIXEL_UNPACK_BUFFER_BINDING: 0x88EF,
    FLOAT_MAT2x3: 0x8B65,
    FLOAT_MAT2x4: 0x8B66,
    FLOAT_MAT3x2: 0x8B67,
    FLOAT_MAT3x4: 0x8B68,
    FLOAT_MAT4x2: 0x8B69,
    FLOAT_MAT4x3: 0x8B6A,
    SRGB: 0x8C40,
    SRGB8: 0x8C41,
    SRGB8_ALPHA8: 0x8C43,
    COMPARE_REF_TO_TEXTURE: 0x884E,
    RGBA32F: 0x8814,
    RGB32F: 0x8815,
    RGBA16F: 0x881A,
    RGB16F: 0x881B,
    VERTEX_ATTRIB_ARRAY_INTEGER: 0x88FD,
    MAX_ARRAY_TEXTURE_LAYERS: 0x88FF,
    MIN_PROGRAM_TEXEL_OFFSET: 0x8904,
    MAX_PROGRAM_TEXEL_OFFSET: 0x8905,
    MAX_VARYING_COMPONENTS: 0x8B4B,
    TEXTURE_2D_ARRAY: 0x8C1A,
    TEXTURE_BINDING_2D_ARRAY: 0x8C1D,
    R11F_G11F_B10F: 0x8C3A,
    UNSIGNED_INT_10F_11F_11F_REV: 0x8C3B,
    RGB9_E5: 0x8C3D,
    UNSIGNED_INT_5_9_9_9_REV: 0x8C3E,
    TRANSFORM_FEEDBACK_BUFFER_MODE: 0x8C7F,
    MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 0x8C80,
    TRANSFORM_FEEDBACK_VARYINGS: 0x8C83,
    TRANSFORM_FEEDBACK_BUFFER_START: 0x8C84,
    TRANSFORM_FEEDBACK_BUFFER_SIZE: 0x8C85,
    TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 0x8C88,
    RASTERIZER_DISCARD: 0x8C89,
    MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 0x8C8A,
    MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 0x8C8B,
    INTERLEAVED_ATTRIBS: 0x8C8C,
    SEPARATE_ATTRIBS: 0x8C8D,
    TRANSFORM_FEEDBACK_BUFFER: 0x8C8E,
    TRANSFORM_FEEDBACK_BUFFER_BINDING: 0x8C8F,
    RGBA32UI: 0x8D70,
    RGB32UI: 0x8D71,
    RGBA16UI: 0x8D76,
    RGB16UI: 0x8D77,
    RGBA8UI: 0x8D7C,
    RGB8UI: 0x8D7D,
    RGBA32I: 0x8D82,
    RGB32I: 0x8D83,
    RGBA16I: 0x8D88,
    RGB16I: 0x8D89,
    RGBA8I: 0x8D8E,
    RGB8I: 0x8D8F,
    RED_INTEGER: 0x8D94,
    RGB_INTEGER: 0x8D98,
    RGBA_INTEGER: 0x8D99,
    SAMPLER_2D_ARRAY: 0x8DC1,
    SAMPLER_2D_ARRAY_SHADOW: 0x8DC4,
    SAMPLER_CUBE_SHADOW: 0x8DC5,
    UNSIGNED_INT_VEC2: 0x8DC6,
    UNSIGNED_INT_VEC3: 0x8DC7,
    UNSIGNED_INT_VEC4: 0x8DC8,
    INT_SAMPLER_2D: 0x8DCA,
    INT_SAMPLER_3D: 0x8DCB,
    INT_SAMPLER_CUBE: 0x8DCC,
    INT_SAMPLER_2D_ARRAY: 0x8DCF,
    UNSIGNED_INT_SAMPLER_2D: 0x8DD2,
    UNSIGNED_INT_SAMPLER_3D: 0x8DD3,
    UNSIGNED_INT_SAMPLER_CUBE: 0x8DD4,
    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8DD7,
    DEPTH_COMPONENT32F: 0x8CAC,
    DEPTH32F_STENCIL8: 0x8CAD,
    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8DAD,
    FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 0x8210,
    FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 0x8211,
    FRAMEBUFFER_ATTACHMENT_RED_SIZE: 0x8212,
    FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 0x8213,
    FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 0x8214,
    FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 0x8215,
    FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 0x8216,
    FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 0x8217,
    FRAMEBUFFER_DEFAULT: 0x8218,
    UNSIGNED_INT_24_8: 0x84FA,
    DEPTH24_STENCIL8: 0x88F0,
    UNSIGNED_NORMALIZED: 0x8C17,
    DRAW_FRAMEBUFFER_BINDING: 0x8CA6,
    READ_FRAMEBUFFER: 0x8CA8,
    DRAW_FRAMEBUFFER: 0x8CA9,
    READ_FRAMEBUFFER_BINDING: 0x8CAA,
    RENDERBUFFER_SAMPLES: 0x8CAB,
    FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 0x8CD4,
    MAX_COLOR_ATTACHMENTS: 0x8CDF,
    COLOR_ATTACHMENT1: 0x8CE1,
    COLOR_ATTACHMENT2: 0x8CE2,
    COLOR_ATTACHMENT3: 0x8CE3,
    COLOR_ATTACHMENT4: 0x8CE4,
    COLOR_ATTACHMENT5: 0x8CE5,
    COLOR_ATTACHMENT6: 0x8CE6,
    COLOR_ATTACHMENT7: 0x8CE7,
    COLOR_ATTACHMENT8: 0x8CE8,
    COLOR_ATTACHMENT9: 0x8CE9,
    COLOR_ATTACHMENT10: 0x8CEA,
    COLOR_ATTACHMENT11: 0x8CEB,
    COLOR_ATTACHMENT12: 0x8CEC,
    COLOR_ATTACHMENT13: 0x8CED,
    COLOR_ATTACHMENT14: 0x8CEE,
    COLOR_ATTACHMENT15: 0x8CEF,
    FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 0x8D56,
    MAX_SAMPLES: 0x8D57,
    HALF_FLOAT: 0x140B,
    RG: 0x8227,
    RG_INTEGER: 0x8228,
    R8: 0x8229,
    RG8: 0x822B,
    R16F: 0x822D,
    R32F: 0x822E,
    RG16F: 0x822F,
    RG32F: 0x8230,
    R8I: 0x8231,
    R8UI: 0x8232,
    R16I: 0x8233,
    R16UI: 0x8234,
    R32I: 0x8235,
    R32UI: 0x8236,
    RG8I: 0x8237,
    RG8UI: 0x8238,
    RG16I: 0x8239,
    RG16UI: 0x823A,
    RG32I: 0x823B,
    RG32UI: 0x823C,
    VERTEX_ARRAY_BINDING: 0x85B5,
    R8_SNORM: 0x8F94,
    RG8_SNORM: 0x8F95,
    RGB8_SNORM: 0x8F96,
    RGBA8_SNORM: 0x8F97,
    SIGNED_NORMALIZED: 0x8F9C,
    COPY_READ_BUFFER: 0x8F36,
    COPY_WRITE_BUFFER: 0x8F37,
    COPY_READ_BUFFER_BINDING: 0x8F36,
    COPY_WRITE_BUFFER_BINDING: 0x8F37,
    UNIFORM_BUFFER: 0x8A11,
    UNIFORM_BUFFER_BINDING: 0x8A28,
    UNIFORM_BUFFER_START: 0x8A29,
    UNIFORM_BUFFER_SIZE: 0x8A2A,
    MAX_VERTEX_UNIFORM_BLOCKS: 0x8A2B,
    MAX_FRAGMENT_UNIFORM_BLOCKS: 0x8A2D,
    MAX_COMBINED_UNIFORM_BLOCKS: 0x8A2E,
    MAX_UNIFORM_BUFFER_BINDINGS: 0x8A2F,
    MAX_UNIFORM_BLOCK_SIZE: 0x8A30,
    MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 0x8A31,
    MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 0x8A33,
    UNIFORM_BUFFER_OFFSET_ALIGNMENT: 0x8A34,
    ACTIVE_UNIFORM_BLOCKS: 0x8A36,
    UNIFORM_TYPE: 0x8A37,
    UNIFORM_SIZE: 0x8A38,
    UNIFORM_BLOCK_INDEX: 0x8A3A,
    UNIFORM_OFFSET: 0x8A3B,
    UNIFORM_ARRAY_STRIDE: 0x8A3C,
    UNIFORM_MATRIX_STRIDE: 0x8A3D,
    UNIFORM_IS_ROW_MAJOR: 0x8A3E,
    UNIFORM_BLOCK_BINDING: 0x8A3F,
    UNIFORM_BLOCK_DATA_SIZE: 0x8A40,
    UNIFORM_BLOCK_ACTIVE_UNIFORMS: 0x8A42,
    UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 0x8A43,
    UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 0x8A44,
    UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 0x8A46,
    INVALID_INDEX: 0xFFFFFFFF,
    MAX_VERTEX_OUTPUT_COMPONENTS: 0x9122,
    MAX_FRAGMENT_INPUT_COMPONENTS: 0x9125,
    MAX_SERVER_WAIT_TIMEOUT: 0x9111,
    OBJECT_TYPE: 0x9112,
    SYNC_CONDITION: 0x9113,
    SYNC_STATUS: 0x9114,
    SYNC_FLAGS: 0x9115,
    SYNC_FENCE: 0x9116,
    SYNC_GPU_COMMANDS_COMPLETE: 0x9117,
    UNSIGNALED: 0x9118,
    SIGNALED: 0x9119,
    ALREADY_SIGNALED: 0x911A,
    TIMEOUT_EXPIRED: 0x911B,
    CONDITION_SATISFIED: 0x911C,
    WAIT_FAILED: 0x911D,
    SYNC_FLUSH_COMMANDS_BIT: 0x00000001,
    VERTEX_ATTRIB_ARRAY_DIVISOR: 0x88FE,
    ANY_SAMPLES_PASSED: 0x8C2F,
    ANY_SAMPLES_PASSED_CONSERVATIVE: 0x8D6A,
    SAMPLER_BINDING: 0x8919,
    RGB10_A2UI: 0x906F,
    INT_2_10_10_10_REV: 0x8D9F,
    TRANSFORM_FEEDBACK: 0x8E22,
    TRANSFORM_FEEDBACK_PAUSED: 0x8E23,
    TRANSFORM_FEEDBACK_ACTIVE: 0x8E24,
    TRANSFORM_FEEDBACK_BINDING: 0x8E25,
    TEXTURE_IMMUTABLE_FORMAT: 0x912F,
    MAX_ELEMENT_INDEX: 0x8D6B,
    TEXTURE_IMMUTABLE_LEVELS: 0x82DF,
    TIMEOUT_IGNORED: -1,
    MAX_CLIENT_WAIT_TIMEOUT_WEBGL: 0x9247,
};

// If not listed, defaults to 0
const NON_NUMERIC_DEFAULTS = {
    COPY_READ_BUFFER_BINDING: null,
    COPY_WRITE_BUFFER_BINDING: null,
    DRAW_FRAMEBUFFER_BINDING: null,
    PIXEL_PACK_BUFFER_BINDING: null,
    PIXEL_UNPACK_BUFFER_BINDING: null,
    RASTERIZER_DISCARD: false,
    READ_FRAMEBUFFER_BINDING: null,
    SAMPLE_ALPHA_TO_COVERAGE: false,
    SAMPLE_COVERAGE: false,
    SAMPLER_BINDING: null,
    TEXTURE_BINDING_2D_ARRAY: null,
    TEXTURE_BINDING_3D: null,
    TRANSFORM_FEEDBACK_ACTIVE: false,
    TRANSFORM_FEEDBACK_BINDING: null,
    TRANSFORM_FEEDBACK_BUFFER_BINDING: null,
    TRANSFORM_FEEDBACK_PAUSED: false,
    UNIFORM_BUFFER_BINDING: null,
    VERTEX_ARRAY_BINDING: null
};

const WEBGL2_PARAMETER_DEFAULTS = {};
for (const name in WEBGL2_ENUMS) {
    const defaultValue = name in NON_NUMERIC_DEFAULTS ? NON_NUMERIC_DEFAULTS[name] : 0;
    WEBGL2_PARAMETER_DEFAULTS[WEBGL2_ENUMS[name]] = defaultValue;
}

const EXTENSION_ENUMS = {
    // https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query_webgl2/
    QUERY_COUNTER_BITS_EXT: 0x8864,
    TIME_ELAPSED_EXT: 0x88BF,
    TIMESTAMP_EXT: 0x8E28,
    GPU_DISJOINT_EXT: 0x8FBB,

    // https://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/
    TEXTURE_MAX_ANISOTROPY_EXT: 0x84FE,
    MAX_TEXTURE_MAX_ANISOTROPY_EXT: 0x84FF,

    // https://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/
    UNMASKED_VENDOR_WEBGL: 0x9245,
    UNMASKED_RENDERER_WEBGL: 0x9246,

    // https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/
    COMPLETION_STATUS_KHR: 0x91B1,

    // https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/
    COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83F0,
    COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83F1,
    COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83F2,
    COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83F3,

    // https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/
    COMPRESSED_SRGB_S3TC_DXT1_EXT: 0x8C4C,
    COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: 0x8C4D,
    COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: 0x8C4E,
    COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: 0x8C4F,

    // https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/
    COMPRESSED_R11_EAC: 0x9270,
    COMPRESSED_SIGNED_R11_EAC: 0x9271,
    COMPRESSED_RG11_EAC: 0x9272,
    COMPRESSED_SIGNED_RG11_EAC: 0x9273,
    COMPRESSED_RGB8_ETC2: 0x9274,
    COMPRESSED_SRGB8_ETC2: 0x9275,
    COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9276,
    COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9277,
    COMPRESSED_RGBA8_ETC2_EAC: 0x9278,
    COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9279,

    // https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/
    COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8C00,
    COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8C01,
    COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8C02,
    COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8C03,

    // https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/
    COMPRESSED_RGBA_ASTC_4x4_KHR: 0x93B0,
    COMPRESSED_RGBA_ASTC_5x4_KHR: 0x93B1,
    COMPRESSED_RGBA_ASTC_5x5_KHR: 0x93B2,
    COMPRESSED_RGBA_ASTC_6x5_KHR: 0x93B3,
    COMPRESSED_RGBA_ASTC_6x6_KHR: 0x93B4,
    COMPRESSED_RGBA_ASTC_8x5_KHR: 0x93B5,
    COMPRESSED_RGBA_ASTC_8x6_KHR: 0x93B6,
    COMPRESSED_RGBA_ASTC_8x8_KHR: 0x93B7,
    COMPRESSED_RGBA_ASTC_10x5_KHR: 0x93B8,
    COMPRESSED_RGBA_ASTC_10x6_KHR: 0x93B9,
    COMPRESSED_RGBA_ASTC_10x8_KHR: 0x93BA,
    COMPRESSED_RGBA_ASTC_10x10_KHR: 0x93BB,
    COMPRESSED_RGBA_ASTC_12x10_KHR: 0x93BC,
    COMPRESSED_RGBA_ASTC_12x12_KHR: 0x93BD,
    COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: 0x93D0,
    COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: 0x93D1,
    COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: 0x93D2,
    COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: 0x93D3,
    COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: 0x93D4,
    COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: 0x93D5,
    COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: 0x93D6,
    COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: 0x93D7,
    COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: 0x93D8,
    COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: 0x93D9,
    COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: 0x93DA,
    COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: 0x93DB,
    COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: 0x93DC,
    COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: 0x93DD
};

const FUNCTIONS = [
    "copyBufferSubData",
    "getBufferSubData",
    "blitFramebuffer",
    "framebufferTextureLayer",
    "getInternalformatParameter",
    "invalidateFramebuffer",
    "invalidateSubFramebuffer",
    "readBuffer",
    "renderbufferStorageMultisample",
    "texStorage2D",
    "texStorage3D",
    "texImage3D",
    "texSubImage3D",
    "copyTexSubImage3D",
    "compressedTexImage3D",
    "compressedTexSubImage3D",
    "getFragDataLocation",
    "uniform1ui",
    "uniform2ui",
    "uniform3ui",
    "uniform4ui",
    "uniform1uiv",
    "uniform2uiv",
    "uniform3uiv",
    "uniform4uiv",
    "uniformMatrix2x3fv",
    "uniformMatrix3x2fv",
    "uniformMatrix2x4fv",
    "uniformMatrix4x2fv",
    "uniformMatrix3x4fv",
    "uniformMatrix4x3fv",
    "vertexAttribI4i",
    "vertexAttribI4iv",
    "vertexAttribI4ui",
    "vertexAttribI4uiv",
    "vertexAttribIPointer",
    "vertexAttribDivisor",
    "drawArraysInstanced",
    "drawElementsInstanced",
    "drawRangeElements",
    "drawBuffers",
    "clearBufferiv",
    "clearBufferuiv",
    "clearBufferfv",
    "clearBufferfi",
    "createQuery",
    "deleteQuery",
    "isQuery",
    "beginQuery",
    "endQuery",
    "getQuery",
    "getQueryParameter",
    "createSampler",
    "deleteSampler",
    "isSampler",
    "bindSampler",
    "samplerParameteri",
    "samplerParameterf",
    "getSamplerParameter",
    "fenceSync",
    "isSync",
    "deleteSync",
    "clientWaitSync",
    "waitSync",
    "getSyncParameter",
    "createTransformFeedback",
    "deleteTransformFeedback",
    "isTransformFeedback",
    "bindTransformFeedback",
    "beginTransformFeedback",
    "endTransformFeedback",
    "transformFeedbackVaryings",
    "getTransformFeedbackVarying",
    "pauseTransformFeedback",
    "resumeTransformFeedback",
    "bindBufferBase",
    "bindBufferRange",
    "getIndexedParameter",
    "getUniformIndices",
    "getActiveUniforms",
    "getUniformBlockIndex",
    "getActiveUniformBlockParameter",
    "getActiveUniformBlockName",
    "uniformBlockBinding",
    "createVertexArray",
    "deleteVertexArray",
    "isVertexArray",
    "bindVertexArray",
    "activeTexture",
    "attachShader",
    "bindAttribLocation",
    "bindBuffer",
    "bindFramebuffer",
    "bindRenderbuffer",
    "bindTexture",
    "blendColor",
    "blendEquation",
    "blendEquationSeparate",
    "blendFunc",
    "blendFuncSeparate",
    "bufferData",
    "bufferSubData",
    "checkFramebufferStatus",
    "clear",
    "clearColor",
    "clearDepth",
    "clearStencil",
    "colorMask",
    "compileShader",
    "compressedTexImage2D",
    "compressedTexSubImage2D",
    "copyTexImage2D",
    "copyTexSubImage2D",
    "createBuffer",
    "createFramebuffer",
    "createProgram",
    "createRenderbuffer",
    "createShader",
    "createTexture",
    "cullFace",
    "deleteBuffer",
    "deleteFramebuffer",
    "deleteProgram",
    "deleteRenderbuffer",
    "deleteShader",
    "deleteTexture",
    "depthFunc",
    "depthMask",
    "depthRange",
    "detachShader",
    "disable",
    "disableVertexAttribArray",
    "drawArrays",
    "drawElements",
    "enable",
    "enableVertexAttribArray",
    "finish",
    "flush",
    "framebufferRenderbuffer",
    "framebufferTexture2D",
    "frontFace",
    "generateMipmap",
    "getActiveAttrib",
    "getActiveUniform",
    "getAttachedShaders",
    "getAttribLocation",
    "getBufferParameter",
    "getContextAttributes",
    "getError",
    "getExtension",
    "getFramebufferAttachmentParameter",
    "getParameter",
    "getProgramParameter",
    "getProgramInfoLog",
    "getRenderbufferParameter",
    "getShaderParameter",
    "getShaderInfoLog",
    "getShaderPrecisionFormat",
    "getShaderSource",
    "getSupportedExtensions",
    "getTexParameter",
    "getUniform",
    "getUniformLocation",
    "getVertexAttrib",
    "getVertexAttribOffset",
    "hint",
    "isBuffer",
    "isContextLost",
    "isEnabled",
    "isFramebuffer",
    "isProgram",
    "isRenderbuffer",
    "isShader",
    "isTexture",
    "lineWidth",
    "linkProgram",
    "pixelStorei",
    "polygonOffset",
    "readPixels",
    "renderbufferStorage",
    "sampleCoverage",
    "scissor",
    "shaderSource",
    "stencilFunc",
    "stencilFuncSeparate",
    "stencilMask",
    "stencilMaskSeparate",
    "stencilOp",
    "stencilOpSeparate",
    "texParameterf",
    "texParameteri",
    "texImage2D",
    "texSubImage2D",
    "uniform1f",
    "uniform1fv",
    "uniform1i",
    "uniform1iv",
    "uniform2f",
    "uniform2fv",
    "uniform2i",
    "uniform2iv",
    "uniform3f",
    "uniform3fv",
    "uniform3i",
    "uniform3iv",
    "uniform4f",
    "uniform4fv",
    "uniform4i",
    "uniform4iv",
    "uniformMatrix2fv",
    "uniformMatrix3fv",
    "uniformMatrix4fv",
    "useProgram",
    "validateProgram",
    "vertexAttrib1f",
    "vertexAttrib1fv",
    "vertexAttrib2f",
    "vertexAttrib2fv",
    "vertexAttrib3f",
    "vertexAttrib3fv",
    "vertexAttrib4f",
    "vertexAttrib4fv",
    "vertexAttribPointer",
    "viewport",
    "makeXRCompatible",
];

const WEBGL2_IMPLICIT_EXTENSIONS = {
    ANGLE_instanced_arrays: true,
    EXT_blend_minmax: true,
    EXT_color_buffer_half_float: true,
    EXT_frag_depth: true,
    EXT_shader_texture_lod: true,
    EXT_sRGB: true,
    OES_element_index_uint: true,
    OES_standard_derivatives: true,
    OES_texture_float: true,
    OES_texture_half_float: true,
    OES_texture_half_float_linear: true,
    OES_vertex_array_object: true,
    WEBGL_depth_texture: true,
    WEBGL_draw_buffers: true
};

const WEBGL_EXTENSION_FUNCTIONS = {
    createVertexArray: ["OES_vertex_array_object", "createVertexArrayOES"],
    deleteVertexArray: ["OES_vertex_array_object", "deleteVertexArrayOES"],
    isVertexArray: ["OES_vertex_array_object", "isVertexArrayOES"],
    bindVertexArray: ["OES_vertex_array_object", "bindVertexArrayOES"],
    drawArraysInstanced: ["ANGLE_instanced_arrays", "drawArraysInstancedANGLE"],
    drawElementsInstanced: ["ANGLE_instanced_arrays", "drawElementsInstancedANGLE"],
    vertexAttribDivisor: ["ANGLE_instanced_arrays", "vertexAttribDivisorANGLE"],
    drawBuffers: ["WEBGL_draw_buffers", "drawBuffersWEBGL"]
};


/***/ }),

/***/ "./src/webglx.js":
/*!***********************!*\
  !*** ./src/webglx.js ***!
  \***********************/
/*! exports provided: getContext, instrumentFunction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getContext", function() { return getContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "instrumentFunction", function() { return instrumentFunction; });
/* harmony import */ var _webgl_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webgl-api.js */ "./src/webgl-api.js");


function getContext(canvas, {requireExtensions = [], contextOptions = {}, forceWebGL2 = false, forceWebGL1 = false} = {}) {
    let gl, version, implicitExtensions;

    if (!forceWebGL1) {
        gl = canvas.getContext("webgl2", contextOptions);
        version = 2;
        implicitExtensions = _webgl_api_js__WEBPACK_IMPORTED_MODULE_0__["WEBGL2_IMPLICIT_EXTENSIONS"];
    }

    if (!gl) {
        if (forceWebGL2) {
            console.error("[WebGLX] WebGL 2 unavailable and forceWebGL2 flag is set.")
            return null;
        }
        gl = canvas.getContext("webgl", contextOptions) || canvas.getContext("experimental-webgl", contextOptions);
        version = 1;
        implicitExtensions = {};
    }

    if (!gl) {
        console.error("[WebGLX] WebGL unavailable.")
        return null;
    }

    for (let i = 0; i < requireExtensions.length; ++i) {
        const extName = requireExtensions[i];
        if (!implicitExtensions[extName] && !gl.getExtension(extName)) {
            console.error(`[WebGLX] Extension ${extName} unavailable.`);
            return null;
        }
    }

    if (gl) {
        return new createWebGLXContext(gl, version, implicitExtensions);
    } else {
        return null;
    }
}

function instrumentFunction(glx, fnName, fn) {
    if (!glx.webglx) {
        console.error("[WebGLX] Not a WebGLX context.");
    }

    const origFn = glx[fnName].bind(glx);
    glx[fnName] = (...args) => fn(origFn, ...args);
}

function createWebGLXContext(gl, contextVersion, implicitExtensions) {
    const webglx = {
        gl,
        contextVersion,
        extensions: {},
        extensionFunctions: {},
        implicitExtensions,
        supportedExtensions: []
    };

    const glx = {
        webglx,

        get canvas() {
            return this.webglx.gl.canvas;
        },

        get drawingBufferWidth() {
            return this.webglx.gl.drawingBufferWidth;
        },

        get drawingBufferHeight() {
            return this.webglx.gl.drawingBufferHeight;
        },

        getParameter(param) {
            if (this.webglx.contextVersion === 1 && param in _webgl_api_js__WEBPACK_IMPORTED_MODULE_0__["WEBGL2_PARAMETER_DEFAULTS"]) {
                return _webgl_api_js__WEBPACK_IMPORTED_MODULE_0__["WEBGL2_PARAMETER_DEFAULTS"][param];
            } else {
                return this.webglx.gl.getParameter(param);
            }
        },

        getProgramParameter(program, param) {
            if (this.webglx.contextVersion === 1 && param in _webgl_api_js__WEBPACK_IMPORTED_MODULE_0__["WEBGL2_PARAMETER_DEFAULTS"]) {
                return _webgl_api_js__WEBPACK_IMPORTED_MODULE_0__["WEBGL2_PARAMETER_DEFAULTS"][param];
            } else {
                return this.webglx.gl.getProgramParameter(program, param);
            }   
        },

        getExtension(extName) {
            if (this.webglx.implicitExtensions[extName]) {
                return this;
            } else {
                return this.webglx.extensions[extName];
            }
        },

        getSupportedExtensions() {
            return this.webglx.supportedExtensions;
        }
    };

    Object.assign(glx, _webgl_api_js__WEBPACK_IMPORTED_MODULE_0__["WEBGL_ENUMS"], _webgl_api_js__WEBPACK_IMPORTED_MODULE_0__["WEBGL2_ENUMS"], _webgl_api_js__WEBPACK_IMPORTED_MODULE_0__["EXTENSION_ENUMS"]);

    gl.getSupportedExtensions().forEach(extName => webglx.extensions[extName] = gl.getExtension(extName));
    webglx.supportedExtensions = Object.keys(webglx.implicitExtensions).concat(gl.getSupportedExtensions());

    _webgl_api_js__WEBPACK_IMPORTED_MODULE_0__["FUNCTIONS"].forEach(fn => {
        if (glx[fn]) {
            return;
        }

        if (gl[fn]) {
            glx[fn] = (...args) => gl[fn](...args);
        } else if (_webgl_api_js__WEBPACK_IMPORTED_MODULE_0__["WEBGL_EXTENSION_FUNCTIONS"][fn]) {
            const [extName, extFunction] = _webgl_api_js__WEBPACK_IMPORTED_MODULE_0__["WEBGL_EXTENSION_FUNCTIONS"][fn];
            if (webglx.extensions[extName]) {
                const ext = webglx.extensions[extName];
                glx[fn] = (...args) => ext[extFunction](...args);
            }
        }

        if (!glx[fn]) {
            glx[fn] = () => { 
                throw new Error(`[WebGLX] Function "${fn}" not available.`);
            };
        }
    });

    return glx;
}


/***/ })

/******/ });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9XZWJHTFgvd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovL1dlYkdMWC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9XZWJHTFgvLi9zcmMvd2ViZ2wtYXBpLmpzIiwid2VicGFjazovL1dlYkdMWC8uL3NyYy93ZWJnbHguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsTztRQ1ZBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBOzs7UUFHQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0EsMENBQTBDLGdDQUFnQztRQUMxRTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBLHdEQUF3RCxrQkFBa0I7UUFDMUU7UUFDQSxpREFBaUQsY0FBYztRQUMvRDs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0EseUNBQXlDLGlDQUFpQztRQUMxRSxnSEFBZ0gsbUJBQW1CLEVBQUU7UUFDckk7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQSwyQkFBMkIsMEJBQTBCLEVBQUU7UUFDdkQsaUNBQWlDLGVBQWU7UUFDaEQ7UUFDQTtRQUNBOztRQUVBO1FBQ0Esc0RBQXNELCtEQUErRDs7UUFFckg7UUFDQTs7O1FBR0E7UUFDQTs7Ozs7Ozs7Ozs7OztBQ2xGQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUMvNUJBO0FBQUE7QUFBQTtBQUFBO0FBUXdCOztBQUVqQiw2QkFBNkIsMkNBQTJDLDJDQUEyQyxLQUFLO0FBQy9IOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qix3RUFBMEI7QUFDdkQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQiw4QkFBOEI7QUFDakQ7QUFDQTtBQUNBLGdEQUFnRCxRQUFRO0FBQ3hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0EsNkRBQTZELHVFQUF5QjtBQUN0Rix1QkFBdUIsdUVBQXlCO0FBQ2hELGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBLDZEQUE2RCx1RUFBeUI7QUFDdEYsdUJBQXVCLHVFQUF5QjtBQUNoRCxhQUFhO0FBQ2I7QUFDQSxhO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLHlEQUFXLEVBQUUsMERBQVksRUFBRSw2REFBZTs7QUFFakU7QUFDQTs7QUFFQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTLFVBQVUsdUVBQXlCO0FBQzVDLDJDQUEyQyx1RUFBeUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDZCO0FBQ0Esc0RBQXNELEdBQUc7QUFDekQ7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQSIsImZpbGUiOiJ3ZWJnbHgubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wiV2ViR0xYXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcIldlYkdMWFwiXSA9IGZhY3RvcnkoKTtcbn0pKHdpbmRvdywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gIiwiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFwiLi9zcmMvd2ViZ2x4LmpzXCIpO1xuIiwiZXhwb3J0IGNvbnN0IFdFQkdMX0VOVU1TID0ge1xuICAgIERFUFRIX0JVRkZFUl9CSVQ6IDB4MDAwMDAxMDAsXG4gICAgU1RFTkNJTF9CVUZGRVJfQklUOiAweDAwMDAwNDAwLFxuICAgIENPTE9SX0JVRkZFUl9CSVQ6IDB4MDAwMDQwMDAsXG4gICAgUE9JTlRTOiAweDAwMDAsXG4gICAgTElORVM6IDB4MDAwMSxcbiAgICBMSU5FX0xPT1A6IDB4MDAwMixcbiAgICBMSU5FX1NUUklQOiAweDAwMDMsXG4gICAgVFJJQU5HTEVTOiAweDAwMDQsXG4gICAgVFJJQU5HTEVfU1RSSVA6IDB4MDAwNSxcbiAgICBUUklBTkdMRV9GQU46IDB4MDAwNixcbiAgICBaRVJPOiAwLFxuICAgIE9ORTogMSxcbiAgICBTUkNfQ09MT1I6IDB4MDMwMCxcbiAgICBPTkVfTUlOVVNfU1JDX0NPTE9SOiAweDAzMDEsXG4gICAgU1JDX0FMUEhBOiAweDAzMDIsXG4gICAgT05FX01JTlVTX1NSQ19BTFBIQTogMHgwMzAzLFxuICAgIERTVF9BTFBIQTogMHgwMzA0LFxuICAgIE9ORV9NSU5VU19EU1RfQUxQSEE6IDB4MDMwNSxcbiAgICBEU1RfQ09MT1I6IDB4MDMwNixcbiAgICBPTkVfTUlOVVNfRFNUX0NPTE9SOiAweDAzMDcsXG4gICAgU1JDX0FMUEhBX1NBVFVSQVRFOiAweDAzMDgsXG4gICAgRlVOQ19BREQ6IDB4ODAwNixcbiAgICBCTEVORF9FUVVBVElPTjogMHg4MDA5LFxuICAgIEJMRU5EX0VRVUFUSU9OX1JHQjogMHg4MDA5LFxuICAgIEJMRU5EX0VRVUFUSU9OX0FMUEhBOiAweDg4M0QsXG4gICAgRlVOQ19TVUJUUkFDVDogMHg4MDBBLFxuICAgIEZVTkNfUkVWRVJTRV9TVUJUUkFDVDogMHg4MDBCLFxuICAgIEJMRU5EX0RTVF9SR0I6IDB4ODBDOCxcbiAgICBCTEVORF9TUkNfUkdCOiAweDgwQzksXG4gICAgQkxFTkRfRFNUX0FMUEhBOiAweDgwQ0EsXG4gICAgQkxFTkRfU1JDX0FMUEhBOiAweDgwQ0IsXG4gICAgQ09OU1RBTlRfQ09MT1I6IDB4ODAwMSxcbiAgICBPTkVfTUlOVVNfQ09OU1RBTlRfQ09MT1I6IDB4ODAwMixcbiAgICBDT05TVEFOVF9BTFBIQTogMHg4MDAzLFxuICAgIE9ORV9NSU5VU19DT05TVEFOVF9BTFBIQTogMHg4MDA0LFxuICAgIEJMRU5EX0NPTE9SOiAweDgwMDUsXG4gICAgQVJSQVlfQlVGRkVSOiAweDg4OTIsXG4gICAgRUxFTUVOVF9BUlJBWV9CVUZGRVI6IDB4ODg5MyxcbiAgICBBUlJBWV9CVUZGRVJfQklORElORzogMHg4ODk0LFxuICAgIEVMRU1FTlRfQVJSQVlfQlVGRkVSX0JJTkRJTkc6IDB4ODg5NSxcbiAgICBTVFJFQU1fRFJBVzogMHg4OEUwLFxuICAgIFNUQVRJQ19EUkFXOiAweDg4RTQsXG4gICAgRFlOQU1JQ19EUkFXOiAweDg4RTgsXG4gICAgQlVGRkVSX1NJWkU6IDB4ODc2NCxcbiAgICBCVUZGRVJfVVNBR0U6IDB4ODc2NSxcbiAgICBDVVJSRU5UX1ZFUlRFWF9BVFRSSUI6IDB4ODYyNixcbiAgICBGUk9OVDogMHgwNDA0LFxuICAgIEJBQ0s6IDB4MDQwNSxcbiAgICBGUk9OVF9BTkRfQkFDSzogMHgwNDA4LFxuICAgIENVTExfRkFDRTogMHgwQjQ0LFxuICAgIEJMRU5EOiAweDBCRTIsXG4gICAgRElUSEVSOiAweDBCRDAsXG4gICAgU1RFTkNJTF9URVNUOiAweDBCOTAsXG4gICAgREVQVEhfVEVTVDogMHgwQjcxLFxuICAgIFNDSVNTT1JfVEVTVDogMHgwQzExLFxuICAgIFBPTFlHT05fT0ZGU0VUX0ZJTEw6IDB4ODAzNyxcbiAgICBTQU1QTEVfQUxQSEFfVE9fQ09WRVJBR0U6IDB4ODA5RSxcbiAgICBTQU1QTEVfQ09WRVJBR0U6IDB4ODBBMCxcbiAgICBOT19FUlJPUjogMCxcbiAgICBJTlZBTElEX0VOVU06IDB4MDUwMCxcbiAgICBJTlZBTElEX1ZBTFVFOiAweDA1MDEsXG4gICAgSU5WQUxJRF9PUEVSQVRJT046IDB4MDUwMixcbiAgICBPVVRfT0ZfTUVNT1JZOiAweDA1MDUsXG4gICAgQ1c6IDB4MDkwMCxcbiAgICBDQ1c6IDB4MDkwMSxcbiAgICBMSU5FX1dJRFRIOiAweDBCMjEsXG4gICAgQUxJQVNFRF9QT0lOVF9TSVpFX1JBTkdFOiAweDg0NkQsXG4gICAgQUxJQVNFRF9MSU5FX1dJRFRIX1JBTkdFOiAweDg0NkUsXG4gICAgQ1VMTF9GQUNFX01PREU6IDB4MEI0NSxcbiAgICBGUk9OVF9GQUNFOiAweDBCNDYsXG4gICAgREVQVEhfUkFOR0U6IDB4MEI3MCxcbiAgICBERVBUSF9XUklURU1BU0s6IDB4MEI3MixcbiAgICBERVBUSF9DTEVBUl9WQUxVRTogMHgwQjczLFxuICAgIERFUFRIX0ZVTkM6IDB4MEI3NCxcbiAgICBTVEVOQ0lMX0NMRUFSX1ZBTFVFOiAweDBCOTEsXG4gICAgU1RFTkNJTF9GVU5DOiAweDBCOTIsXG4gICAgU1RFTkNJTF9GQUlMOiAweDBCOTQsXG4gICAgU1RFTkNJTF9QQVNTX0RFUFRIX0ZBSUw6IDB4MEI5NSxcbiAgICBTVEVOQ0lMX1BBU1NfREVQVEhfUEFTUzogMHgwQjk2LFxuICAgIFNURU5DSUxfUkVGOiAweDBCOTcsXG4gICAgU1RFTkNJTF9WQUxVRV9NQVNLOiAweDBCOTMsXG4gICAgU1RFTkNJTF9XUklURU1BU0s6IDB4MEI5OCxcbiAgICBTVEVOQ0lMX0JBQ0tfRlVOQzogMHg4ODAwLFxuICAgIFNURU5DSUxfQkFDS19GQUlMOiAweDg4MDEsXG4gICAgU1RFTkNJTF9CQUNLX1BBU1NfREVQVEhfRkFJTDogMHg4ODAyLFxuICAgIFNURU5DSUxfQkFDS19QQVNTX0RFUFRIX1BBU1M6IDB4ODgwMyxcbiAgICBTVEVOQ0lMX0JBQ0tfUkVGOiAweDhDQTMsXG4gICAgU1RFTkNJTF9CQUNLX1ZBTFVFX01BU0s6IDB4OENBNCxcbiAgICBTVEVOQ0lMX0JBQ0tfV1JJVEVNQVNLOiAweDhDQTUsXG4gICAgVklFV1BPUlQ6IDB4MEJBMixcbiAgICBTQ0lTU09SX0JPWDogMHgwQzEwLFxuICAgIENPTE9SX0NMRUFSX1ZBTFVFOiAweDBDMjIsXG4gICAgQ09MT1JfV1JJVEVNQVNLOiAweDBDMjMsXG4gICAgVU5QQUNLX0FMSUdOTUVOVDogMHgwQ0Y1LFxuICAgIFBBQ0tfQUxJR05NRU5UOiAweDBEMDUsXG4gICAgTUFYX1RFWFRVUkVfU0laRTogMHgwRDMzLFxuICAgIE1BWF9WSUVXUE9SVF9ESU1TOiAweDBEM0EsXG4gICAgU1VCUElYRUxfQklUUzogMHgwRDUwLFxuICAgIFJFRF9CSVRTOiAweDBENTIsXG4gICAgR1JFRU5fQklUUzogMHgwRDUzLFxuICAgIEJMVUVfQklUUzogMHgwRDU0LFxuICAgIEFMUEhBX0JJVFM6IDB4MEQ1NSxcbiAgICBERVBUSF9CSVRTOiAweDBENTYsXG4gICAgU1RFTkNJTF9CSVRTOiAweDBENTcsXG4gICAgUE9MWUdPTl9PRkZTRVRfVU5JVFM6IDB4MkEwMCxcbiAgICBQT0xZR09OX09GRlNFVF9GQUNUT1I6IDB4ODAzOCxcbiAgICBURVhUVVJFX0JJTkRJTkdfMkQ6IDB4ODA2OSxcbiAgICBTQU1QTEVfQlVGRkVSUzogMHg4MEE4LFxuICAgIFNBTVBMRVM6IDB4ODBBOSxcbiAgICBTQU1QTEVfQ09WRVJBR0VfVkFMVUU6IDB4ODBBQSxcbiAgICBTQU1QTEVfQ09WRVJBR0VfSU5WRVJUOiAweDgwQUIsXG4gICAgQ09NUFJFU1NFRF9URVhUVVJFX0ZPUk1BVFM6IDB4ODZBMyxcbiAgICBET05UX0NBUkU6IDB4MTEwMCxcbiAgICBGQVNURVNUOiAweDExMDEsXG4gICAgTklDRVNUOiAweDExMDIsXG4gICAgR0VORVJBVEVfTUlQTUFQX0hJTlQ6IDB4ODE5MixcbiAgICBCWVRFOiAweDE0MDAsXG4gICAgVU5TSUdORURfQllURTogMHgxNDAxLFxuICAgIFNIT1JUOiAweDE0MDIsXG4gICAgVU5TSUdORURfU0hPUlQ6IDB4MTQwMyxcbiAgICBJTlQ6IDB4MTQwNCxcbiAgICBVTlNJR05FRF9JTlQ6IDB4MTQwNSxcbiAgICBGTE9BVDogMHgxNDA2LFxuICAgIERFUFRIX0NPTVBPTkVOVDogMHgxOTAyLFxuICAgIEFMUEhBOiAweDE5MDYsXG4gICAgUkdCOiAweDE5MDcsXG4gICAgUkdCQTogMHgxOTA4LFxuICAgIExVTUlOQU5DRTogMHgxOTA5LFxuICAgIExVTUlOQU5DRV9BTFBIQTogMHgxOTBBLFxuICAgIFVOU0lHTkVEX1NIT1JUXzRfNF80XzQ6IDB4ODAzMyxcbiAgICBVTlNJR05FRF9TSE9SVF81XzVfNV8xOiAweDgwMzQsXG4gICAgVU5TSUdORURfU0hPUlRfNV82XzU6IDB4ODM2MyxcbiAgICBGUkFHTUVOVF9TSEFERVI6IDB4OEIzMCxcbiAgICBWRVJURVhfU0hBREVSOiAweDhCMzEsXG4gICAgTUFYX1ZFUlRFWF9BVFRSSUJTOiAweDg4NjksXG4gICAgTUFYX1ZFUlRFWF9VTklGT1JNX1ZFQ1RPUlM6IDB4OERGQixcbiAgICBNQVhfVkFSWUlOR19WRUNUT1JTOiAweDhERkMsXG4gICAgTUFYX0NPTUJJTkVEX1RFWFRVUkVfSU1BR0VfVU5JVFM6IDB4OEI0RCxcbiAgICBNQVhfVkVSVEVYX1RFWFRVUkVfSU1BR0VfVU5JVFM6IDB4OEI0QyxcbiAgICBNQVhfVEVYVFVSRV9JTUFHRV9VTklUUzogMHg4ODcyLFxuICAgIE1BWF9GUkFHTUVOVF9VTklGT1JNX1ZFQ1RPUlM6IDB4OERGRCxcbiAgICBTSEFERVJfVFlQRTogMHg4QjRGLFxuICAgIERFTEVURV9TVEFUVVM6IDB4OEI4MCxcbiAgICBMSU5LX1NUQVRVUzogMHg4QjgyLFxuICAgIFZBTElEQVRFX1NUQVRVUzogMHg4QjgzLFxuICAgIEFUVEFDSEVEX1NIQURFUlM6IDB4OEI4NSxcbiAgICBBQ1RJVkVfVU5JRk9STVM6IDB4OEI4NixcbiAgICBBQ1RJVkVfQVRUUklCVVRFUzogMHg4Qjg5LFxuICAgIFNIQURJTkdfTEFOR1VBR0VfVkVSU0lPTjogMHg4QjhDLFxuICAgIENVUlJFTlRfUFJPR1JBTTogMHg4QjhELFxuICAgIE5FVkVSOiAweDAyMDAsXG4gICAgTEVTUzogMHgwMjAxLFxuICAgIEVRVUFMOiAweDAyMDIsXG4gICAgTEVRVUFMOiAweDAyMDMsXG4gICAgR1JFQVRFUjogMHgwMjA0LFxuICAgIE5PVEVRVUFMOiAweDAyMDUsXG4gICAgR0VRVUFMOiAweDAyMDYsXG4gICAgQUxXQVlTOiAweDAyMDcsXG4gICAgS0VFUDogMHgxRTAwLFxuICAgIFJFUExBQ0U6IDB4MUUwMSxcbiAgICBJTkNSOiAweDFFMDIsXG4gICAgREVDUjogMHgxRTAzLFxuICAgIElOVkVSVDogMHgxNTBBLFxuICAgIElOQ1JfV1JBUDogMHg4NTA3LFxuICAgIERFQ1JfV1JBUDogMHg4NTA4LFxuICAgIFZFTkRPUjogMHgxRjAwLFxuICAgIFJFTkRFUkVSOiAweDFGMDEsXG4gICAgVkVSU0lPTjogMHgxRjAyLFxuICAgIE5FQVJFU1Q6IDB4MjYwMCxcbiAgICBMSU5FQVI6IDB4MjYwMSxcbiAgICBORUFSRVNUX01JUE1BUF9ORUFSRVNUOiAweDI3MDAsXG4gICAgTElORUFSX01JUE1BUF9ORUFSRVNUOiAweDI3MDEsXG4gICAgTkVBUkVTVF9NSVBNQVBfTElORUFSOiAweDI3MDIsXG4gICAgTElORUFSX01JUE1BUF9MSU5FQVI6IDB4MjcwMyxcbiAgICBURVhUVVJFX01BR19GSUxURVI6IDB4MjgwMCxcbiAgICBURVhUVVJFX01JTl9GSUxURVI6IDB4MjgwMSxcbiAgICBURVhUVVJFX1dSQVBfUzogMHgyODAyLFxuICAgIFRFWFRVUkVfV1JBUF9UOiAweDI4MDMsXG4gICAgVEVYVFVSRV8yRDogMHgwREUxLFxuICAgIFRFWFRVUkU6IDB4MTcwMixcbiAgICBURVhUVVJFX0NVQkVfTUFQOiAweDg1MTMsXG4gICAgVEVYVFVSRV9CSU5ESU5HX0NVQkVfTUFQOiAweDg1MTQsXG4gICAgVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YOiAweDg1MTUsXG4gICAgVEVYVFVSRV9DVUJFX01BUF9ORUdBVElWRV9YOiAweDg1MTYsXG4gICAgVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9ZOiAweDg1MTcsXG4gICAgVEVYVFVSRV9DVUJFX01BUF9ORUdBVElWRV9ZOiAweDg1MTgsXG4gICAgVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9aOiAweDg1MTksXG4gICAgVEVYVFVSRV9DVUJFX01BUF9ORUdBVElWRV9aOiAweDg1MUEsXG4gICAgTUFYX0NVQkVfTUFQX1RFWFRVUkVfU0laRTogMHg4NTFDLFxuICAgIFRFWFRVUkUwOiAweDg0QzAsXG4gICAgVEVYVFVSRTE6IDB4ODRDMSxcbiAgICBURVhUVVJFMjogMHg4NEMyLFxuICAgIFRFWFRVUkUzOiAweDg0QzMsXG4gICAgVEVYVFVSRTQ6IDB4ODRDNCxcbiAgICBURVhUVVJFNTogMHg4NEM1LFxuICAgIFRFWFRVUkU2OiAweDg0QzYsXG4gICAgVEVYVFVSRTc6IDB4ODRDNyxcbiAgICBURVhUVVJFODogMHg4NEM4LFxuICAgIFRFWFRVUkU5OiAweDg0QzksXG4gICAgVEVYVFVSRTEwOiAweDg0Q0EsXG4gICAgVEVYVFVSRTExOiAweDg0Q0IsXG4gICAgVEVYVFVSRTEyOiAweDg0Q0MsXG4gICAgVEVYVFVSRTEzOiAweDg0Q0QsXG4gICAgVEVYVFVSRTE0OiAweDg0Q0UsXG4gICAgVEVYVFVSRTE1OiAweDg0Q0YsXG4gICAgVEVYVFVSRTE2OiAweDg0RDAsXG4gICAgVEVYVFVSRTE3OiAweDg0RDEsXG4gICAgVEVYVFVSRTE4OiAweDg0RDIsXG4gICAgVEVYVFVSRTE5OiAweDg0RDMsXG4gICAgVEVYVFVSRTIwOiAweDg0RDQsXG4gICAgVEVYVFVSRTIxOiAweDg0RDUsXG4gICAgVEVYVFVSRTIyOiAweDg0RDYsXG4gICAgVEVYVFVSRTIzOiAweDg0RDcsXG4gICAgVEVYVFVSRTI0OiAweDg0RDgsXG4gICAgVEVYVFVSRTI1OiAweDg0RDksXG4gICAgVEVYVFVSRTI2OiAweDg0REEsXG4gICAgVEVYVFVSRTI3OiAweDg0REIsXG4gICAgVEVYVFVSRTI4OiAweDg0REMsXG4gICAgVEVYVFVSRTI5OiAweDg0REQsXG4gICAgVEVYVFVSRTMwOiAweDg0REUsXG4gICAgVEVYVFVSRTMxOiAweDg0REYsXG4gICAgQUNUSVZFX1RFWFRVUkU6IDB4ODRFMCxcbiAgICBSRVBFQVQ6IDB4MjkwMSxcbiAgICBDTEFNUF9UT19FREdFOiAweDgxMkYsXG4gICAgTUlSUk9SRURfUkVQRUFUOiAweDgzNzAsXG4gICAgRkxPQVRfVkVDMjogMHg4QjUwLFxuICAgIEZMT0FUX1ZFQzM6IDB4OEI1MSxcbiAgICBGTE9BVF9WRUM0OiAweDhCNTIsXG4gICAgSU5UX1ZFQzI6IDB4OEI1MyxcbiAgICBJTlRfVkVDMzogMHg4QjU0LFxuICAgIElOVF9WRUM0OiAweDhCNTUsXG4gICAgQk9PTDogMHg4QjU2LFxuICAgIEJPT0xfVkVDMjogMHg4QjU3LFxuICAgIEJPT0xfVkVDMzogMHg4QjU4LFxuICAgIEJPT0xfVkVDNDogMHg4QjU5LFxuICAgIEZMT0FUX01BVDI6IDB4OEI1QSxcbiAgICBGTE9BVF9NQVQzOiAweDhCNUIsXG4gICAgRkxPQVRfTUFUNDogMHg4QjVDLFxuICAgIFNBTVBMRVJfMkQ6IDB4OEI1RSxcbiAgICBTQU1QTEVSX0NVQkU6IDB4OEI2MCxcbiAgICBWRVJURVhfQVRUUklCX0FSUkFZX0VOQUJMRUQ6IDB4ODYyMixcbiAgICBWRVJURVhfQVRUUklCX0FSUkFZX1NJWkU6IDB4ODYyMyxcbiAgICBWRVJURVhfQVRUUklCX0FSUkFZX1NUUklERTogMHg4NjI0LFxuICAgIFZFUlRFWF9BVFRSSUJfQVJSQVlfVFlQRTogMHg4NjI1LFxuICAgIFZFUlRFWF9BVFRSSUJfQVJSQVlfTk9STUFMSVpFRDogMHg4ODZBLFxuICAgIFZFUlRFWF9BVFRSSUJfQVJSQVlfUE9JTlRFUjogMHg4NjQ1LFxuICAgIFZFUlRFWF9BVFRSSUJfQVJSQVlfQlVGRkVSX0JJTkRJTkc6IDB4ODg5RixcbiAgICBJTVBMRU1FTlRBVElPTl9DT0xPUl9SRUFEX1RZUEU6IDB4OEI5QSxcbiAgICBJTVBMRU1FTlRBVElPTl9DT0xPUl9SRUFEX0ZPUk1BVDogMHg4QjlCLFxuICAgIENPTVBJTEVfU1RBVFVTOiAweDhCODEsXG4gICAgTE9XX0ZMT0FUOiAweDhERjAsXG4gICAgTUVESVVNX0ZMT0FUOiAweDhERjEsXG4gICAgSElHSF9GTE9BVDogMHg4REYyLFxuICAgIExPV19JTlQ6IDB4OERGMyxcbiAgICBNRURJVU1fSU5UOiAweDhERjQsXG4gICAgSElHSF9JTlQ6IDB4OERGNSxcbiAgICBGUkFNRUJVRkZFUjogMHg4RDQwLFxuICAgIFJFTkRFUkJVRkZFUjogMHg4RDQxLFxuICAgIFJHQkE0OiAweDgwNTYsXG4gICAgUkdCNV9BMTogMHg4MDU3LFxuICAgIFJHQjU2NTogMHg4RDYyLFxuICAgIERFUFRIX0NPTVBPTkVOVDE2OiAweDgxQTUsXG4gICAgU1RFTkNJTF9JTkRFWDogMHgxOTAxLFxuICAgIFNURU5DSUxfSU5ERVg4OiAweDhENDgsXG4gICAgREVQVEhfU1RFTkNJTDogMHg4NEY5LFxuICAgIFJFTkRFUkJVRkZFUl9XSURUSDogMHg4RDQyLFxuICAgIFJFTkRFUkJVRkZFUl9IRUlHSFQ6IDB4OEQ0MyxcbiAgICBSRU5ERVJCVUZGRVJfSU5URVJOQUxfRk9STUFUOiAweDhENDQsXG4gICAgUkVOREVSQlVGRkVSX1JFRF9TSVpFOiAweDhENTAsXG4gICAgUkVOREVSQlVGRkVSX0dSRUVOX1NJWkU6IDB4OEQ1MSxcbiAgICBSRU5ERVJCVUZGRVJfQkxVRV9TSVpFOiAweDhENTIsXG4gICAgUkVOREVSQlVGRkVSX0FMUEhBX1NJWkU6IDB4OEQ1MyxcbiAgICBSRU5ERVJCVUZGRVJfREVQVEhfU0laRTogMHg4RDU0LFxuICAgIFJFTkRFUkJVRkZFUl9TVEVOQ0lMX1NJWkU6IDB4OEQ1NSxcbiAgICBGUkFNRUJVRkZFUl9BVFRBQ0hNRU5UX09CSkVDVF9UWVBFOiAweDhDRDAsXG4gICAgRlJBTUVCVUZGRVJfQVRUQUNITUVOVF9PQkpFQ1RfTkFNRTogMHg4Q0QxLFxuICAgIEZSQU1FQlVGRkVSX0FUVEFDSE1FTlRfVEVYVFVSRV9MRVZFTDogMHg4Q0QyLFxuICAgIEZSQU1FQlVGRkVSX0FUVEFDSE1FTlRfVEVYVFVSRV9DVUJFX01BUF9GQUNFOiAweDhDRDMsXG4gICAgQ09MT1JfQVRUQUNITUVOVDA6IDB4OENFMCxcbiAgICBERVBUSF9BVFRBQ0hNRU5UOiAweDhEMDAsXG4gICAgU1RFTkNJTF9BVFRBQ0hNRU5UOiAweDhEMjAsXG4gICAgREVQVEhfU1RFTkNJTF9BVFRBQ0hNRU5UOiAweDgyMUEsXG4gICAgTk9ORTogMCxcbiAgICBGUkFNRUJVRkZFUl9DT01QTEVURTogMHg4Q0Q1LFxuICAgIEZSQU1FQlVGRkVSX0lOQ09NUExFVEVfQVRUQUNITUVOVDogMHg4Q0Q2LFxuICAgIEZSQU1FQlVGRkVSX0lOQ09NUExFVEVfTUlTU0lOR19BVFRBQ0hNRU5UOiAweDhDRDcsXG4gICAgRlJBTUVCVUZGRVJfSU5DT01QTEVURV9ESU1FTlNJT05TOiAweDhDRDksXG4gICAgRlJBTUVCVUZGRVJfVU5TVVBQT1JURUQ6IDB4OENERCxcbiAgICBGUkFNRUJVRkZFUl9CSU5ESU5HOiAweDhDQTYsXG4gICAgUkVOREVSQlVGRkVSX0JJTkRJTkc6IDB4OENBNyxcbiAgICBNQVhfUkVOREVSQlVGRkVSX1NJWkU6IDB4ODRFOCxcbiAgICBJTlZBTElEX0ZSQU1FQlVGRkVSX09QRVJBVElPTjogMHgwNTA2LFxuICAgIFVOUEFDS19GTElQX1lfV0VCR0w6IDB4OTI0MCxcbiAgICBVTlBBQ0tfUFJFTVVMVElQTFlfQUxQSEFfV0VCR0w6IDB4OTI0MSxcbiAgICBDT05URVhUX0xPU1RfV0VCR0w6IDB4OTI0MixcbiAgICBVTlBBQ0tfQ09MT1JTUEFDRV9DT05WRVJTSU9OX1dFQkdMOiAweDkyNDMsXG4gICAgQlJPV1NFUl9ERUZBVUxUX1dFQkdMOiAweDkyNDQsXG59O1xuXG5leHBvcnQgY29uc3QgV0VCR0wyX0VOVU1TID0ge1xuICAgIFJFQURfQlVGRkVSOiAweDBDMDIsXG4gICAgVU5QQUNLX1JPV19MRU5HVEg6IDB4MENGMixcbiAgICBVTlBBQ0tfU0tJUF9ST1dTOiAweDBDRjMsXG4gICAgVU5QQUNLX1NLSVBfUElYRUxTOiAweDBDRjQsXG4gICAgUEFDS19ST1dfTEVOR1RIOiAweDBEMDIsXG4gICAgUEFDS19TS0lQX1JPV1M6IDB4MEQwMyxcbiAgICBQQUNLX1NLSVBfUElYRUxTOiAweDBEMDQsXG4gICAgQ09MT1I6IDB4MTgwMCxcbiAgICBERVBUSDogMHgxODAxLFxuICAgIFNURU5DSUw6IDB4MTgwMixcbiAgICBSRUQ6IDB4MTkwMyxcbiAgICBSR0I4OiAweDgwNTEsXG4gICAgUkdCQTg6IDB4ODA1OCxcbiAgICBSR0IxMF9BMjogMHg4MDU5LFxuICAgIFRFWFRVUkVfQklORElOR18zRDogMHg4MDZBLFxuICAgIFVOUEFDS19TS0lQX0lNQUdFUzogMHg4MDZELFxuICAgIFVOUEFDS19JTUFHRV9IRUlHSFQ6IDB4ODA2RSxcbiAgICBURVhUVVJFXzNEOiAweDgwNkYsXG4gICAgVEVYVFVSRV9XUkFQX1I6IDB4ODA3MixcbiAgICBNQVhfM0RfVEVYVFVSRV9TSVpFOiAweDgwNzMsXG4gICAgVU5TSUdORURfSU5UXzJfMTBfMTBfMTBfUkVWOiAweDgzNjgsXG4gICAgTUFYX0VMRU1FTlRTX1ZFUlRJQ0VTOiAweDgwRTgsXG4gICAgTUFYX0VMRU1FTlRTX0lORElDRVM6IDB4ODBFOSxcbiAgICBURVhUVVJFX01JTl9MT0Q6IDB4ODEzQSxcbiAgICBURVhUVVJFX01BWF9MT0Q6IDB4ODEzQixcbiAgICBURVhUVVJFX0JBU0VfTEVWRUw6IDB4ODEzQyxcbiAgICBURVhUVVJFX01BWF9MRVZFTDogMHg4MTNELFxuICAgIE1JTjogMHg4MDA3LFxuICAgIE1BWDogMHg4MDA4LFxuICAgIERFUFRIX0NPTVBPTkVOVDI0OiAweDgxQTYsXG4gICAgTUFYX1RFWFRVUkVfTE9EX0JJQVM6IDB4ODRGRCxcbiAgICBURVhUVVJFX0NPTVBBUkVfTU9ERTogMHg4ODRDLFxuICAgIFRFWFRVUkVfQ09NUEFSRV9GVU5DOiAweDg4NEQsXG4gICAgQ1VSUkVOVF9RVUVSWTogMHg4ODY1LFxuICAgIFFVRVJZX1JFU1VMVDogMHg4ODY2LFxuICAgIFFVRVJZX1JFU1VMVF9BVkFJTEFCTEU6IDB4ODg2NyxcbiAgICBTVFJFQU1fUkVBRDogMHg4OEUxLFxuICAgIFNUUkVBTV9DT1BZOiAweDg4RTIsXG4gICAgU1RBVElDX1JFQUQ6IDB4ODhFNSxcbiAgICBTVEFUSUNfQ09QWTogMHg4OEU2LFxuICAgIERZTkFNSUNfUkVBRDogMHg4OEU5LFxuICAgIERZTkFNSUNfQ09QWTogMHg4OEVBLFxuICAgIE1BWF9EUkFXX0JVRkZFUlM6IDB4ODgyNCxcbiAgICBEUkFXX0JVRkZFUjA6IDB4ODgyNSxcbiAgICBEUkFXX0JVRkZFUjE6IDB4ODgyNixcbiAgICBEUkFXX0JVRkZFUjI6IDB4ODgyNyxcbiAgICBEUkFXX0JVRkZFUjM6IDB4ODgyOCxcbiAgICBEUkFXX0JVRkZFUjQ6IDB4ODgyOSxcbiAgICBEUkFXX0JVRkZFUjU6IDB4ODgyQSxcbiAgICBEUkFXX0JVRkZFUjY6IDB4ODgyQixcbiAgICBEUkFXX0JVRkZFUjc6IDB4ODgyQyxcbiAgICBEUkFXX0JVRkZFUjg6IDB4ODgyRCxcbiAgICBEUkFXX0JVRkZFUjk6IDB4ODgyRSxcbiAgICBEUkFXX0JVRkZFUjEwOiAweDg4MkYsXG4gICAgRFJBV19CVUZGRVIxMTogMHg4ODMwLFxuICAgIERSQVdfQlVGRkVSMTI6IDB4ODgzMSxcbiAgICBEUkFXX0JVRkZFUjEzOiAweDg4MzIsXG4gICAgRFJBV19CVUZGRVIxNDogMHg4ODMzLFxuICAgIERSQVdfQlVGRkVSMTU6IDB4ODgzNCxcbiAgICBNQVhfRlJBR01FTlRfVU5JRk9STV9DT01QT05FTlRTOiAweDhCNDksXG4gICAgTUFYX1ZFUlRFWF9VTklGT1JNX0NPTVBPTkVOVFM6IDB4OEI0QSxcbiAgICBTQU1QTEVSXzNEOiAweDhCNUYsXG4gICAgU0FNUExFUl8yRF9TSEFET1c6IDB4OEI2MixcbiAgICBGUkFHTUVOVF9TSEFERVJfREVSSVZBVElWRV9ISU5UOiAweDhCOEIsXG4gICAgUElYRUxfUEFDS19CVUZGRVI6IDB4ODhFQixcbiAgICBQSVhFTF9VTlBBQ0tfQlVGRkVSOiAweDg4RUMsXG4gICAgUElYRUxfUEFDS19CVUZGRVJfQklORElORzogMHg4OEVELFxuICAgIFBJWEVMX1VOUEFDS19CVUZGRVJfQklORElORzogMHg4OEVGLFxuICAgIEZMT0FUX01BVDJ4MzogMHg4QjY1LFxuICAgIEZMT0FUX01BVDJ4NDogMHg4QjY2LFxuICAgIEZMT0FUX01BVDN4MjogMHg4QjY3LFxuICAgIEZMT0FUX01BVDN4NDogMHg4QjY4LFxuICAgIEZMT0FUX01BVDR4MjogMHg4QjY5LFxuICAgIEZMT0FUX01BVDR4MzogMHg4QjZBLFxuICAgIFNSR0I6IDB4OEM0MCxcbiAgICBTUkdCODogMHg4QzQxLFxuICAgIFNSR0I4X0FMUEhBODogMHg4QzQzLFxuICAgIENPTVBBUkVfUkVGX1RPX1RFWFRVUkU6IDB4ODg0RSxcbiAgICBSR0JBMzJGOiAweDg4MTQsXG4gICAgUkdCMzJGOiAweDg4MTUsXG4gICAgUkdCQTE2RjogMHg4ODFBLFxuICAgIFJHQjE2RjogMHg4ODFCLFxuICAgIFZFUlRFWF9BVFRSSUJfQVJSQVlfSU5URUdFUjogMHg4OEZELFxuICAgIE1BWF9BUlJBWV9URVhUVVJFX0xBWUVSUzogMHg4OEZGLFxuICAgIE1JTl9QUk9HUkFNX1RFWEVMX09GRlNFVDogMHg4OTA0LFxuICAgIE1BWF9QUk9HUkFNX1RFWEVMX09GRlNFVDogMHg4OTA1LFxuICAgIE1BWF9WQVJZSU5HX0NPTVBPTkVOVFM6IDB4OEI0QixcbiAgICBURVhUVVJFXzJEX0FSUkFZOiAweDhDMUEsXG4gICAgVEVYVFVSRV9CSU5ESU5HXzJEX0FSUkFZOiAweDhDMUQsXG4gICAgUjExRl9HMTFGX0IxMEY6IDB4OEMzQSxcbiAgICBVTlNJR05FRF9JTlRfMTBGXzExRl8xMUZfUkVWOiAweDhDM0IsXG4gICAgUkdCOV9FNTogMHg4QzNELFxuICAgIFVOU0lHTkVEX0lOVF81XzlfOV85X1JFVjogMHg4QzNFLFxuICAgIFRSQU5TRk9STV9GRUVEQkFDS19CVUZGRVJfTU9ERTogMHg4QzdGLFxuICAgIE1BWF9UUkFOU0ZPUk1fRkVFREJBQ0tfU0VQQVJBVEVfQ09NUE9ORU5UUzogMHg4QzgwLFxuICAgIFRSQU5TRk9STV9GRUVEQkFDS19WQVJZSU5HUzogMHg4QzgzLFxuICAgIFRSQU5TRk9STV9GRUVEQkFDS19CVUZGRVJfU1RBUlQ6IDB4OEM4NCxcbiAgICBUUkFOU0ZPUk1fRkVFREJBQ0tfQlVGRkVSX1NJWkU6IDB4OEM4NSxcbiAgICBUUkFOU0ZPUk1fRkVFREJBQ0tfUFJJTUlUSVZFU19XUklUVEVOOiAweDhDODgsXG4gICAgUkFTVEVSSVpFUl9ESVNDQVJEOiAweDhDODksXG4gICAgTUFYX1RSQU5TRk9STV9GRUVEQkFDS19JTlRFUkxFQVZFRF9DT01QT05FTlRTOiAweDhDOEEsXG4gICAgTUFYX1RSQU5TRk9STV9GRUVEQkFDS19TRVBBUkFURV9BVFRSSUJTOiAweDhDOEIsXG4gICAgSU5URVJMRUFWRURfQVRUUklCUzogMHg4QzhDLFxuICAgIFNFUEFSQVRFX0FUVFJJQlM6IDB4OEM4RCxcbiAgICBUUkFOU0ZPUk1fRkVFREJBQ0tfQlVGRkVSOiAweDhDOEUsXG4gICAgVFJBTlNGT1JNX0ZFRURCQUNLX0JVRkZFUl9CSU5ESU5HOiAweDhDOEYsXG4gICAgUkdCQTMyVUk6IDB4OEQ3MCxcbiAgICBSR0IzMlVJOiAweDhENzEsXG4gICAgUkdCQTE2VUk6IDB4OEQ3NixcbiAgICBSR0IxNlVJOiAweDhENzcsXG4gICAgUkdCQThVSTogMHg4RDdDLFxuICAgIFJHQjhVSTogMHg4RDdELFxuICAgIFJHQkEzMkk6IDB4OEQ4MixcbiAgICBSR0IzMkk6IDB4OEQ4MyxcbiAgICBSR0JBMTZJOiAweDhEODgsXG4gICAgUkdCMTZJOiAweDhEODksXG4gICAgUkdCQThJOiAweDhEOEUsXG4gICAgUkdCOEk6IDB4OEQ4RixcbiAgICBSRURfSU5URUdFUjogMHg4RDk0LFxuICAgIFJHQl9JTlRFR0VSOiAweDhEOTgsXG4gICAgUkdCQV9JTlRFR0VSOiAweDhEOTksXG4gICAgU0FNUExFUl8yRF9BUlJBWTogMHg4REMxLFxuICAgIFNBTVBMRVJfMkRfQVJSQVlfU0hBRE9XOiAweDhEQzQsXG4gICAgU0FNUExFUl9DVUJFX1NIQURPVzogMHg4REM1LFxuICAgIFVOU0lHTkVEX0lOVF9WRUMyOiAweDhEQzYsXG4gICAgVU5TSUdORURfSU5UX1ZFQzM6IDB4OERDNyxcbiAgICBVTlNJR05FRF9JTlRfVkVDNDogMHg4REM4LFxuICAgIElOVF9TQU1QTEVSXzJEOiAweDhEQ0EsXG4gICAgSU5UX1NBTVBMRVJfM0Q6IDB4OERDQixcbiAgICBJTlRfU0FNUExFUl9DVUJFOiAweDhEQ0MsXG4gICAgSU5UX1NBTVBMRVJfMkRfQVJSQVk6IDB4OERDRixcbiAgICBVTlNJR05FRF9JTlRfU0FNUExFUl8yRDogMHg4REQyLFxuICAgIFVOU0lHTkVEX0lOVF9TQU1QTEVSXzNEOiAweDhERDMsXG4gICAgVU5TSUdORURfSU5UX1NBTVBMRVJfQ1VCRTogMHg4REQ0LFxuICAgIFVOU0lHTkVEX0lOVF9TQU1QTEVSXzJEX0FSUkFZOiAweDhERDcsXG4gICAgREVQVEhfQ09NUE9ORU5UMzJGOiAweDhDQUMsXG4gICAgREVQVEgzMkZfU1RFTkNJTDg6IDB4OENBRCxcbiAgICBGTE9BVF8zMl9VTlNJR05FRF9JTlRfMjRfOF9SRVY6IDB4OERBRCxcbiAgICBGUkFNRUJVRkZFUl9BVFRBQ0hNRU5UX0NPTE9SX0VOQ09ESU5HOiAweDgyMTAsXG4gICAgRlJBTUVCVUZGRVJfQVRUQUNITUVOVF9DT01QT05FTlRfVFlQRTogMHg4MjExLFxuICAgIEZSQU1FQlVGRkVSX0FUVEFDSE1FTlRfUkVEX1NJWkU6IDB4ODIxMixcbiAgICBGUkFNRUJVRkZFUl9BVFRBQ0hNRU5UX0dSRUVOX1NJWkU6IDB4ODIxMyxcbiAgICBGUkFNRUJVRkZFUl9BVFRBQ0hNRU5UX0JMVUVfU0laRTogMHg4MjE0LFxuICAgIEZSQU1FQlVGRkVSX0FUVEFDSE1FTlRfQUxQSEFfU0laRTogMHg4MjE1LFxuICAgIEZSQU1FQlVGRkVSX0FUVEFDSE1FTlRfREVQVEhfU0laRTogMHg4MjE2LFxuICAgIEZSQU1FQlVGRkVSX0FUVEFDSE1FTlRfU1RFTkNJTF9TSVpFOiAweDgyMTcsXG4gICAgRlJBTUVCVUZGRVJfREVGQVVMVDogMHg4MjE4LFxuICAgIFVOU0lHTkVEX0lOVF8yNF84OiAweDg0RkEsXG4gICAgREVQVEgyNF9TVEVOQ0lMODogMHg4OEYwLFxuICAgIFVOU0lHTkVEX05PUk1BTElaRUQ6IDB4OEMxNyxcbiAgICBEUkFXX0ZSQU1FQlVGRkVSX0JJTkRJTkc6IDB4OENBNixcbiAgICBSRUFEX0ZSQU1FQlVGRkVSOiAweDhDQTgsXG4gICAgRFJBV19GUkFNRUJVRkZFUjogMHg4Q0E5LFxuICAgIFJFQURfRlJBTUVCVUZGRVJfQklORElORzogMHg4Q0FBLFxuICAgIFJFTkRFUkJVRkZFUl9TQU1QTEVTOiAweDhDQUIsXG4gICAgRlJBTUVCVUZGRVJfQVRUQUNITUVOVF9URVhUVVJFX0xBWUVSOiAweDhDRDQsXG4gICAgTUFYX0NPTE9SX0FUVEFDSE1FTlRTOiAweDhDREYsXG4gICAgQ09MT1JfQVRUQUNITUVOVDE6IDB4OENFMSxcbiAgICBDT0xPUl9BVFRBQ0hNRU5UMjogMHg4Q0UyLFxuICAgIENPTE9SX0FUVEFDSE1FTlQzOiAweDhDRTMsXG4gICAgQ09MT1JfQVRUQUNITUVOVDQ6IDB4OENFNCxcbiAgICBDT0xPUl9BVFRBQ0hNRU5UNTogMHg4Q0U1LFxuICAgIENPTE9SX0FUVEFDSE1FTlQ2OiAweDhDRTYsXG4gICAgQ09MT1JfQVRUQUNITUVOVDc6IDB4OENFNyxcbiAgICBDT0xPUl9BVFRBQ0hNRU5UODogMHg4Q0U4LFxuICAgIENPTE9SX0FUVEFDSE1FTlQ5OiAweDhDRTksXG4gICAgQ09MT1JfQVRUQUNITUVOVDEwOiAweDhDRUEsXG4gICAgQ09MT1JfQVRUQUNITUVOVDExOiAweDhDRUIsXG4gICAgQ09MT1JfQVRUQUNITUVOVDEyOiAweDhDRUMsXG4gICAgQ09MT1JfQVRUQUNITUVOVDEzOiAweDhDRUQsXG4gICAgQ09MT1JfQVRUQUNITUVOVDE0OiAweDhDRUUsXG4gICAgQ09MT1JfQVRUQUNITUVOVDE1OiAweDhDRUYsXG4gICAgRlJBTUVCVUZGRVJfSU5DT01QTEVURV9NVUxUSVNBTVBMRTogMHg4RDU2LFxuICAgIE1BWF9TQU1QTEVTOiAweDhENTcsXG4gICAgSEFMRl9GTE9BVDogMHgxNDBCLFxuICAgIFJHOiAweDgyMjcsXG4gICAgUkdfSU5URUdFUjogMHg4MjI4LFxuICAgIFI4OiAweDgyMjksXG4gICAgUkc4OiAweDgyMkIsXG4gICAgUjE2RjogMHg4MjJELFxuICAgIFIzMkY6IDB4ODIyRSxcbiAgICBSRzE2RjogMHg4MjJGLFxuICAgIFJHMzJGOiAweDgyMzAsXG4gICAgUjhJOiAweDgyMzEsXG4gICAgUjhVSTogMHg4MjMyLFxuICAgIFIxNkk6IDB4ODIzMyxcbiAgICBSMTZVSTogMHg4MjM0LFxuICAgIFIzMkk6IDB4ODIzNSxcbiAgICBSMzJVSTogMHg4MjM2LFxuICAgIFJHOEk6IDB4ODIzNyxcbiAgICBSRzhVSTogMHg4MjM4LFxuICAgIFJHMTZJOiAweDgyMzksXG4gICAgUkcxNlVJOiAweDgyM0EsXG4gICAgUkczMkk6IDB4ODIzQixcbiAgICBSRzMyVUk6IDB4ODIzQyxcbiAgICBWRVJURVhfQVJSQVlfQklORElORzogMHg4NUI1LFxuICAgIFI4X1NOT1JNOiAweDhGOTQsXG4gICAgUkc4X1NOT1JNOiAweDhGOTUsXG4gICAgUkdCOF9TTk9STTogMHg4Rjk2LFxuICAgIFJHQkE4X1NOT1JNOiAweDhGOTcsXG4gICAgU0lHTkVEX05PUk1BTElaRUQ6IDB4OEY5QyxcbiAgICBDT1BZX1JFQURfQlVGRkVSOiAweDhGMzYsXG4gICAgQ09QWV9XUklURV9CVUZGRVI6IDB4OEYzNyxcbiAgICBDT1BZX1JFQURfQlVGRkVSX0JJTkRJTkc6IDB4OEYzNixcbiAgICBDT1BZX1dSSVRFX0JVRkZFUl9CSU5ESU5HOiAweDhGMzcsXG4gICAgVU5JRk9STV9CVUZGRVI6IDB4OEExMSxcbiAgICBVTklGT1JNX0JVRkZFUl9CSU5ESU5HOiAweDhBMjgsXG4gICAgVU5JRk9STV9CVUZGRVJfU1RBUlQ6IDB4OEEyOSxcbiAgICBVTklGT1JNX0JVRkZFUl9TSVpFOiAweDhBMkEsXG4gICAgTUFYX1ZFUlRFWF9VTklGT1JNX0JMT0NLUzogMHg4QTJCLFxuICAgIE1BWF9GUkFHTUVOVF9VTklGT1JNX0JMT0NLUzogMHg4QTJELFxuICAgIE1BWF9DT01CSU5FRF9VTklGT1JNX0JMT0NLUzogMHg4QTJFLFxuICAgIE1BWF9VTklGT1JNX0JVRkZFUl9CSU5ESU5HUzogMHg4QTJGLFxuICAgIE1BWF9VTklGT1JNX0JMT0NLX1NJWkU6IDB4OEEzMCxcbiAgICBNQVhfQ09NQklORURfVkVSVEVYX1VOSUZPUk1fQ09NUE9ORU5UUzogMHg4QTMxLFxuICAgIE1BWF9DT01CSU5FRF9GUkFHTUVOVF9VTklGT1JNX0NPTVBPTkVOVFM6IDB4OEEzMyxcbiAgICBVTklGT1JNX0JVRkZFUl9PRkZTRVRfQUxJR05NRU5UOiAweDhBMzQsXG4gICAgQUNUSVZFX1VOSUZPUk1fQkxPQ0tTOiAweDhBMzYsXG4gICAgVU5JRk9STV9UWVBFOiAweDhBMzcsXG4gICAgVU5JRk9STV9TSVpFOiAweDhBMzgsXG4gICAgVU5JRk9STV9CTE9DS19JTkRFWDogMHg4QTNBLFxuICAgIFVOSUZPUk1fT0ZGU0VUOiAweDhBM0IsXG4gICAgVU5JRk9STV9BUlJBWV9TVFJJREU6IDB4OEEzQyxcbiAgICBVTklGT1JNX01BVFJJWF9TVFJJREU6IDB4OEEzRCxcbiAgICBVTklGT1JNX0lTX1JPV19NQUpPUjogMHg4QTNFLFxuICAgIFVOSUZPUk1fQkxPQ0tfQklORElORzogMHg4QTNGLFxuICAgIFVOSUZPUk1fQkxPQ0tfREFUQV9TSVpFOiAweDhBNDAsXG4gICAgVU5JRk9STV9CTE9DS19BQ1RJVkVfVU5JRk9STVM6IDB4OEE0MixcbiAgICBVTklGT1JNX0JMT0NLX0FDVElWRV9VTklGT1JNX0lORElDRVM6IDB4OEE0MyxcbiAgICBVTklGT1JNX0JMT0NLX1JFRkVSRU5DRURfQllfVkVSVEVYX1NIQURFUjogMHg4QTQ0LFxuICAgIFVOSUZPUk1fQkxPQ0tfUkVGRVJFTkNFRF9CWV9GUkFHTUVOVF9TSEFERVI6IDB4OEE0NixcbiAgICBJTlZBTElEX0lOREVYOiAweEZGRkZGRkZGLFxuICAgIE1BWF9WRVJURVhfT1VUUFVUX0NPTVBPTkVOVFM6IDB4OTEyMixcbiAgICBNQVhfRlJBR01FTlRfSU5QVVRfQ09NUE9ORU5UUzogMHg5MTI1LFxuICAgIE1BWF9TRVJWRVJfV0FJVF9USU1FT1VUOiAweDkxMTEsXG4gICAgT0JKRUNUX1RZUEU6IDB4OTExMixcbiAgICBTWU5DX0NPTkRJVElPTjogMHg5MTEzLFxuICAgIFNZTkNfU1RBVFVTOiAweDkxMTQsXG4gICAgU1lOQ19GTEFHUzogMHg5MTE1LFxuICAgIFNZTkNfRkVOQ0U6IDB4OTExNixcbiAgICBTWU5DX0dQVV9DT01NQU5EU19DT01QTEVURTogMHg5MTE3LFxuICAgIFVOU0lHTkFMRUQ6IDB4OTExOCxcbiAgICBTSUdOQUxFRDogMHg5MTE5LFxuICAgIEFMUkVBRFlfU0lHTkFMRUQ6IDB4OTExQSxcbiAgICBUSU1FT1VUX0VYUElSRUQ6IDB4OTExQixcbiAgICBDT05ESVRJT05fU0FUSVNGSUVEOiAweDkxMUMsXG4gICAgV0FJVF9GQUlMRUQ6IDB4OTExRCxcbiAgICBTWU5DX0ZMVVNIX0NPTU1BTkRTX0JJVDogMHgwMDAwMDAwMSxcbiAgICBWRVJURVhfQVRUUklCX0FSUkFZX0RJVklTT1I6IDB4ODhGRSxcbiAgICBBTllfU0FNUExFU19QQVNTRUQ6IDB4OEMyRixcbiAgICBBTllfU0FNUExFU19QQVNTRURfQ09OU0VSVkFUSVZFOiAweDhENkEsXG4gICAgU0FNUExFUl9CSU5ESU5HOiAweDg5MTksXG4gICAgUkdCMTBfQTJVSTogMHg5MDZGLFxuICAgIElOVF8yXzEwXzEwXzEwX1JFVjogMHg4RDlGLFxuICAgIFRSQU5TRk9STV9GRUVEQkFDSzogMHg4RTIyLFxuICAgIFRSQU5TRk9STV9GRUVEQkFDS19QQVVTRUQ6IDB4OEUyMyxcbiAgICBUUkFOU0ZPUk1fRkVFREJBQ0tfQUNUSVZFOiAweDhFMjQsXG4gICAgVFJBTlNGT1JNX0ZFRURCQUNLX0JJTkRJTkc6IDB4OEUyNSxcbiAgICBURVhUVVJFX0lNTVVUQUJMRV9GT1JNQVQ6IDB4OTEyRixcbiAgICBNQVhfRUxFTUVOVF9JTkRFWDogMHg4RDZCLFxuICAgIFRFWFRVUkVfSU1NVVRBQkxFX0xFVkVMUzogMHg4MkRGLFxuICAgIFRJTUVPVVRfSUdOT1JFRDogLTEsXG4gICAgTUFYX0NMSUVOVF9XQUlUX1RJTUVPVVRfV0VCR0w6IDB4OTI0Nyxcbn07XG5cbi8vIElmIG5vdCBsaXN0ZWQsIGRlZmF1bHRzIHRvIDBcbmNvbnN0IE5PTl9OVU1FUklDX0RFRkFVTFRTID0ge1xuICAgIENPUFlfUkVBRF9CVUZGRVJfQklORElORzogbnVsbCxcbiAgICBDT1BZX1dSSVRFX0JVRkZFUl9CSU5ESU5HOiBudWxsLFxuICAgIERSQVdfRlJBTUVCVUZGRVJfQklORElORzogbnVsbCxcbiAgICBQSVhFTF9QQUNLX0JVRkZFUl9CSU5ESU5HOiBudWxsLFxuICAgIFBJWEVMX1VOUEFDS19CVUZGRVJfQklORElORzogbnVsbCxcbiAgICBSQVNURVJJWkVSX0RJU0NBUkQ6IGZhbHNlLFxuICAgIFJFQURfRlJBTUVCVUZGRVJfQklORElORzogbnVsbCxcbiAgICBTQU1QTEVfQUxQSEFfVE9fQ09WRVJBR0U6IGZhbHNlLFxuICAgIFNBTVBMRV9DT1ZFUkFHRTogZmFsc2UsXG4gICAgU0FNUExFUl9CSU5ESU5HOiBudWxsLFxuICAgIFRFWFRVUkVfQklORElOR18yRF9BUlJBWTogbnVsbCxcbiAgICBURVhUVVJFX0JJTkRJTkdfM0Q6IG51bGwsXG4gICAgVFJBTlNGT1JNX0ZFRURCQUNLX0FDVElWRTogZmFsc2UsXG4gICAgVFJBTlNGT1JNX0ZFRURCQUNLX0JJTkRJTkc6IG51bGwsXG4gICAgVFJBTlNGT1JNX0ZFRURCQUNLX0JVRkZFUl9CSU5ESU5HOiBudWxsLFxuICAgIFRSQU5TRk9STV9GRUVEQkFDS19QQVVTRUQ6IGZhbHNlLFxuICAgIFVOSUZPUk1fQlVGRkVSX0JJTkRJTkc6IG51bGwsXG4gICAgVkVSVEVYX0FSUkFZX0JJTkRJTkc6IG51bGxcbn07XG5cbmV4cG9ydCBjb25zdCBXRUJHTDJfUEFSQU1FVEVSX0RFRkFVTFRTID0ge307XG5mb3IgKGNvbnN0IG5hbWUgaW4gV0VCR0wyX0VOVU1TKSB7XG4gICAgY29uc3QgZGVmYXVsdFZhbHVlID0gbmFtZSBpbiBOT05fTlVNRVJJQ19ERUZBVUxUUyA/IE5PTl9OVU1FUklDX0RFRkFVTFRTW25hbWVdIDogMDtcbiAgICBXRUJHTDJfUEFSQU1FVEVSX0RFRkFVTFRTW1dFQkdMMl9FTlVNU1tuYW1lXV0gPSBkZWZhdWx0VmFsdWU7XG59XG5cbmV4cG9ydCBjb25zdCBFWFRFTlNJT05fRU5VTVMgPSB7XG4gICAgLy8gaHR0cHM6Ly93d3cua2hyb25vcy5vcmcvcmVnaXN0cnkvd2ViZ2wvZXh0ZW5zaW9ucy9FWFRfZGlzam9pbnRfdGltZXJfcXVlcnlfd2ViZ2wyL1xuICAgIFFVRVJZX0NPVU5URVJfQklUU19FWFQ6IDB4ODg2NCxcbiAgICBUSU1FX0VMQVBTRURfRVhUOiAweDg4QkYsXG4gICAgVElNRVNUQU1QX0VYVDogMHg4RTI4LFxuICAgIEdQVV9ESVNKT0lOVF9FWFQ6IDB4OEZCQixcblxuICAgIC8vIGh0dHBzOi8vd3d3Lmtocm9ub3Mub3JnL3JlZ2lzdHJ5L3dlYmdsL2V4dGVuc2lvbnMvRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljL1xuICAgIFRFWFRVUkVfTUFYX0FOSVNPVFJPUFlfRVhUOiAweDg0RkUsXG4gICAgTUFYX1RFWFRVUkVfTUFYX0FOSVNPVFJPUFlfRVhUOiAweDg0RkYsXG5cbiAgICAvLyBodHRwczovL3d3dy5raHJvbm9zLm9yZy9yZWdpc3RyeS93ZWJnbC9leHRlbnNpb25zL1dFQkdMX2RlYnVnX3JlbmRlcmVyX2luZm8vXG4gICAgVU5NQVNLRURfVkVORE9SX1dFQkdMOiAweDkyNDUsXG4gICAgVU5NQVNLRURfUkVOREVSRVJfV0VCR0w6IDB4OTI0NixcblxuICAgIC8vIGh0dHBzOi8vd3d3Lmtocm9ub3Mub3JnL3JlZ2lzdHJ5L3dlYmdsL2V4dGVuc2lvbnMvS0hSX3BhcmFsbGVsX3NoYWRlcl9jb21waWxlL1xuICAgIENPTVBMRVRJT05fU1RBVFVTX0tIUjogMHg5MUIxLFxuXG4gICAgLy8gaHR0cHM6Ly93d3cua2hyb25vcy5vcmcvcmVnaXN0cnkvd2ViZ2wvZXh0ZW5zaW9ucy9XRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfczN0Yy9cbiAgICBDT01QUkVTU0VEX1JHQl9TM1RDX0RYVDFfRVhUOiAweDgzRjAsXG4gICAgQ09NUFJFU1NFRF9SR0JBX1MzVENfRFhUMV9FWFQ6IDB4ODNGMSxcbiAgICBDT01QUkVTU0VEX1JHQkFfUzNUQ19EWFQzX0VYVDogMHg4M0YyLFxuICAgIENPTVBSRVNTRURfUkdCQV9TM1RDX0RYVDVfRVhUOiAweDgzRjMsXG5cbiAgICAvLyBodHRwczovL3d3dy5raHJvbm9zLm9yZy9yZWdpc3RyeS93ZWJnbC9leHRlbnNpb25zL1dFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9zM3RjX3NyZ2IvXG4gICAgQ09NUFJFU1NFRF9TUkdCX1MzVENfRFhUMV9FWFQ6IDB4OEM0QyxcbiAgICBDT01QUkVTU0VEX1NSR0JfQUxQSEFfUzNUQ19EWFQxX0VYVDogMHg4QzRELFxuICAgIENPTVBSRVNTRURfU1JHQl9BTFBIQV9TM1RDX0RYVDNfRVhUOiAweDhDNEUsXG4gICAgQ09NUFJFU1NFRF9TUkdCX0FMUEhBX1MzVENfRFhUNV9FWFQ6IDB4OEM0RixcblxuICAgIC8vIGh0dHBzOi8vd3d3Lmtocm9ub3Mub3JnL3JlZ2lzdHJ5L3dlYmdsL2V4dGVuc2lvbnMvV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX2V0Yy9cbiAgICBDT01QUkVTU0VEX1IxMV9FQUM6IDB4OTI3MCxcbiAgICBDT01QUkVTU0VEX1NJR05FRF9SMTFfRUFDOiAweDkyNzEsXG4gICAgQ09NUFJFU1NFRF9SRzExX0VBQzogMHg5MjcyLFxuICAgIENPTVBSRVNTRURfU0lHTkVEX1JHMTFfRUFDOiAweDkyNzMsXG4gICAgQ09NUFJFU1NFRF9SR0I4X0VUQzI6IDB4OTI3NCxcbiAgICBDT01QUkVTU0VEX1NSR0I4X0VUQzI6IDB4OTI3NSxcbiAgICBDT01QUkVTU0VEX1JHQjhfUFVOQ0hUSFJPVUdIX0FMUEhBMV9FVEMyOiAweDkyNzYsXG4gICAgQ09NUFJFU1NFRF9TUkdCOF9QVU5DSFRIUk9VR0hfQUxQSEExX0VUQzI6IDB4OTI3NyxcbiAgICBDT01QUkVTU0VEX1JHQkE4X0VUQzJfRUFDOiAweDkyNzgsXG4gICAgQ09NUFJFU1NFRF9TUkdCOF9BTFBIQThfRVRDMl9FQUM6IDB4OTI3OSxcblxuICAgIC8vIGh0dHBzOi8vd3d3Lmtocm9ub3Mub3JnL3JlZ2lzdHJ5L3dlYmdsL2V4dGVuc2lvbnMvV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3B2cnRjL1xuICAgIENPTVBSRVNTRURfUkdCX1BWUlRDXzRCUFBWMV9JTUc6IDB4OEMwMCxcbiAgICBDT01QUkVTU0VEX1JHQl9QVlJUQ18yQlBQVjFfSU1HOiAweDhDMDEsXG4gICAgQ09NUFJFU1NFRF9SR0JBX1BWUlRDXzRCUFBWMV9JTUc6IDB4OEMwMixcbiAgICBDT01QUkVTU0VEX1JHQkFfUFZSVENfMkJQUFYxX0lNRzogMHg4QzAzLFxuXG4gICAgLy8gaHR0cHM6Ly93d3cua2hyb25vcy5vcmcvcmVnaXN0cnkvd2ViZ2wvZXh0ZW5zaW9ucy9XRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfYXN0Yy9cbiAgICBDT01QUkVTU0VEX1JHQkFfQVNUQ180eDRfS0hSOiAweDkzQjAsXG4gICAgQ09NUFJFU1NFRF9SR0JBX0FTVENfNXg0X0tIUjogMHg5M0IxLFxuICAgIENPTVBSRVNTRURfUkdCQV9BU1RDXzV4NV9LSFI6IDB4OTNCMixcbiAgICBDT01QUkVTU0VEX1JHQkFfQVNUQ182eDVfS0hSOiAweDkzQjMsXG4gICAgQ09NUFJFU1NFRF9SR0JBX0FTVENfNng2X0tIUjogMHg5M0I0LFxuICAgIENPTVBSRVNTRURfUkdCQV9BU1RDXzh4NV9LSFI6IDB4OTNCNSxcbiAgICBDT01QUkVTU0VEX1JHQkFfQVNUQ184eDZfS0hSOiAweDkzQjYsXG4gICAgQ09NUFJFU1NFRF9SR0JBX0FTVENfOHg4X0tIUjogMHg5M0I3LFxuICAgIENPTVBSRVNTRURfUkdCQV9BU1RDXzEweDVfS0hSOiAweDkzQjgsXG4gICAgQ09NUFJFU1NFRF9SR0JBX0FTVENfMTB4Nl9LSFI6IDB4OTNCOSxcbiAgICBDT01QUkVTU0VEX1JHQkFfQVNUQ18xMHg4X0tIUjogMHg5M0JBLFxuICAgIENPTVBSRVNTRURfUkdCQV9BU1RDXzEweDEwX0tIUjogMHg5M0JCLFxuICAgIENPTVBSRVNTRURfUkdCQV9BU1RDXzEyeDEwX0tIUjogMHg5M0JDLFxuICAgIENPTVBSRVNTRURfUkdCQV9BU1RDXzEyeDEyX0tIUjogMHg5M0JELFxuICAgIENPTVBSRVNTRURfU1JHQjhfQUxQSEE4X0FTVENfNHg0X0tIUjogMHg5M0QwLFxuICAgIENPTVBSRVNTRURfU1JHQjhfQUxQSEE4X0FTVENfNXg0X0tIUjogMHg5M0QxLFxuICAgIENPTVBSRVNTRURfU1JHQjhfQUxQSEE4X0FTVENfNXg1X0tIUjogMHg5M0QyLFxuICAgIENPTVBSRVNTRURfU1JHQjhfQUxQSEE4X0FTVENfNng1X0tIUjogMHg5M0QzLFxuICAgIENPTVBSRVNTRURfU1JHQjhfQUxQSEE4X0FTVENfNng2X0tIUjogMHg5M0Q0LFxuICAgIENPTVBSRVNTRURfU1JHQjhfQUxQSEE4X0FTVENfOHg1X0tIUjogMHg5M0Q1LFxuICAgIENPTVBSRVNTRURfU1JHQjhfQUxQSEE4X0FTVENfOHg2X0tIUjogMHg5M0Q2LFxuICAgIENPTVBSRVNTRURfU1JHQjhfQUxQSEE4X0FTVENfOHg4X0tIUjogMHg5M0Q3LFxuICAgIENPTVBSRVNTRURfU1JHQjhfQUxQSEE4X0FTVENfMTB4NV9LSFI6IDB4OTNEOCxcbiAgICBDT01QUkVTU0VEX1NSR0I4X0FMUEhBOF9BU1RDXzEweDZfS0hSOiAweDkzRDksXG4gICAgQ09NUFJFU1NFRF9TUkdCOF9BTFBIQThfQVNUQ18xMHg4X0tIUjogMHg5M0RBLFxuICAgIENPTVBSRVNTRURfU1JHQjhfQUxQSEE4X0FTVENfMTB4MTBfS0hSOiAweDkzREIsXG4gICAgQ09NUFJFU1NFRF9TUkdCOF9BTFBIQThfQVNUQ18xMngxMF9LSFI6IDB4OTNEQyxcbiAgICBDT01QUkVTU0VEX1NSR0I4X0FMUEhBOF9BU1RDXzEyeDEyX0tIUjogMHg5M0REXG59O1xuXG5leHBvcnQgY29uc3QgRlVOQ1RJT05TID0gW1xuICAgIFwiY29weUJ1ZmZlclN1YkRhdGFcIixcbiAgICBcImdldEJ1ZmZlclN1YkRhdGFcIixcbiAgICBcImJsaXRGcmFtZWJ1ZmZlclwiLFxuICAgIFwiZnJhbWVidWZmZXJUZXh0dXJlTGF5ZXJcIixcbiAgICBcImdldEludGVybmFsZm9ybWF0UGFyYW1ldGVyXCIsXG4gICAgXCJpbnZhbGlkYXRlRnJhbWVidWZmZXJcIixcbiAgICBcImludmFsaWRhdGVTdWJGcmFtZWJ1ZmZlclwiLFxuICAgIFwicmVhZEJ1ZmZlclwiLFxuICAgIFwicmVuZGVyYnVmZmVyU3RvcmFnZU11bHRpc2FtcGxlXCIsXG4gICAgXCJ0ZXhTdG9yYWdlMkRcIixcbiAgICBcInRleFN0b3JhZ2UzRFwiLFxuICAgIFwidGV4SW1hZ2UzRFwiLFxuICAgIFwidGV4U3ViSW1hZ2UzRFwiLFxuICAgIFwiY29weVRleFN1YkltYWdlM0RcIixcbiAgICBcImNvbXByZXNzZWRUZXhJbWFnZTNEXCIsXG4gICAgXCJjb21wcmVzc2VkVGV4U3ViSW1hZ2UzRFwiLFxuICAgIFwiZ2V0RnJhZ0RhdGFMb2NhdGlvblwiLFxuICAgIFwidW5pZm9ybTF1aVwiLFxuICAgIFwidW5pZm9ybTJ1aVwiLFxuICAgIFwidW5pZm9ybTN1aVwiLFxuICAgIFwidW5pZm9ybTR1aVwiLFxuICAgIFwidW5pZm9ybTF1aXZcIixcbiAgICBcInVuaWZvcm0ydWl2XCIsXG4gICAgXCJ1bmlmb3JtM3VpdlwiLFxuICAgIFwidW5pZm9ybTR1aXZcIixcbiAgICBcInVuaWZvcm1NYXRyaXgyeDNmdlwiLFxuICAgIFwidW5pZm9ybU1hdHJpeDN4MmZ2XCIsXG4gICAgXCJ1bmlmb3JtTWF0cml4Mng0ZnZcIixcbiAgICBcInVuaWZvcm1NYXRyaXg0eDJmdlwiLFxuICAgIFwidW5pZm9ybU1hdHJpeDN4NGZ2XCIsXG4gICAgXCJ1bmlmb3JtTWF0cml4NHgzZnZcIixcbiAgICBcInZlcnRleEF0dHJpYkk0aVwiLFxuICAgIFwidmVydGV4QXR0cmliSTRpdlwiLFxuICAgIFwidmVydGV4QXR0cmliSTR1aVwiLFxuICAgIFwidmVydGV4QXR0cmliSTR1aXZcIixcbiAgICBcInZlcnRleEF0dHJpYklQb2ludGVyXCIsXG4gICAgXCJ2ZXJ0ZXhBdHRyaWJEaXZpc29yXCIsXG4gICAgXCJkcmF3QXJyYXlzSW5zdGFuY2VkXCIsXG4gICAgXCJkcmF3RWxlbWVudHNJbnN0YW5jZWRcIixcbiAgICBcImRyYXdSYW5nZUVsZW1lbnRzXCIsXG4gICAgXCJkcmF3QnVmZmVyc1wiLFxuICAgIFwiY2xlYXJCdWZmZXJpdlwiLFxuICAgIFwiY2xlYXJCdWZmZXJ1aXZcIixcbiAgICBcImNsZWFyQnVmZmVyZnZcIixcbiAgICBcImNsZWFyQnVmZmVyZmlcIixcbiAgICBcImNyZWF0ZVF1ZXJ5XCIsXG4gICAgXCJkZWxldGVRdWVyeVwiLFxuICAgIFwiaXNRdWVyeVwiLFxuICAgIFwiYmVnaW5RdWVyeVwiLFxuICAgIFwiZW5kUXVlcnlcIixcbiAgICBcImdldFF1ZXJ5XCIsXG4gICAgXCJnZXRRdWVyeVBhcmFtZXRlclwiLFxuICAgIFwiY3JlYXRlU2FtcGxlclwiLFxuICAgIFwiZGVsZXRlU2FtcGxlclwiLFxuICAgIFwiaXNTYW1wbGVyXCIsXG4gICAgXCJiaW5kU2FtcGxlclwiLFxuICAgIFwic2FtcGxlclBhcmFtZXRlcmlcIixcbiAgICBcInNhbXBsZXJQYXJhbWV0ZXJmXCIsXG4gICAgXCJnZXRTYW1wbGVyUGFyYW1ldGVyXCIsXG4gICAgXCJmZW5jZVN5bmNcIixcbiAgICBcImlzU3luY1wiLFxuICAgIFwiZGVsZXRlU3luY1wiLFxuICAgIFwiY2xpZW50V2FpdFN5bmNcIixcbiAgICBcIndhaXRTeW5jXCIsXG4gICAgXCJnZXRTeW5jUGFyYW1ldGVyXCIsXG4gICAgXCJjcmVhdGVUcmFuc2Zvcm1GZWVkYmFja1wiLFxuICAgIFwiZGVsZXRlVHJhbnNmb3JtRmVlZGJhY2tcIixcbiAgICBcImlzVHJhbnNmb3JtRmVlZGJhY2tcIixcbiAgICBcImJpbmRUcmFuc2Zvcm1GZWVkYmFja1wiLFxuICAgIFwiYmVnaW5UcmFuc2Zvcm1GZWVkYmFja1wiLFxuICAgIFwiZW5kVHJhbnNmb3JtRmVlZGJhY2tcIixcbiAgICBcInRyYW5zZm9ybUZlZWRiYWNrVmFyeWluZ3NcIixcbiAgICBcImdldFRyYW5zZm9ybUZlZWRiYWNrVmFyeWluZ1wiLFxuICAgIFwicGF1c2VUcmFuc2Zvcm1GZWVkYmFja1wiLFxuICAgIFwicmVzdW1lVHJhbnNmb3JtRmVlZGJhY2tcIixcbiAgICBcImJpbmRCdWZmZXJCYXNlXCIsXG4gICAgXCJiaW5kQnVmZmVyUmFuZ2VcIixcbiAgICBcImdldEluZGV4ZWRQYXJhbWV0ZXJcIixcbiAgICBcImdldFVuaWZvcm1JbmRpY2VzXCIsXG4gICAgXCJnZXRBY3RpdmVVbmlmb3Jtc1wiLFxuICAgIFwiZ2V0VW5pZm9ybUJsb2NrSW5kZXhcIixcbiAgICBcImdldEFjdGl2ZVVuaWZvcm1CbG9ja1BhcmFtZXRlclwiLFxuICAgIFwiZ2V0QWN0aXZlVW5pZm9ybUJsb2NrTmFtZVwiLFxuICAgIFwidW5pZm9ybUJsb2NrQmluZGluZ1wiLFxuICAgIFwiY3JlYXRlVmVydGV4QXJyYXlcIixcbiAgICBcImRlbGV0ZVZlcnRleEFycmF5XCIsXG4gICAgXCJpc1ZlcnRleEFycmF5XCIsXG4gICAgXCJiaW5kVmVydGV4QXJyYXlcIixcbiAgICBcImFjdGl2ZVRleHR1cmVcIixcbiAgICBcImF0dGFjaFNoYWRlclwiLFxuICAgIFwiYmluZEF0dHJpYkxvY2F0aW9uXCIsXG4gICAgXCJiaW5kQnVmZmVyXCIsXG4gICAgXCJiaW5kRnJhbWVidWZmZXJcIixcbiAgICBcImJpbmRSZW5kZXJidWZmZXJcIixcbiAgICBcImJpbmRUZXh0dXJlXCIsXG4gICAgXCJibGVuZENvbG9yXCIsXG4gICAgXCJibGVuZEVxdWF0aW9uXCIsXG4gICAgXCJibGVuZEVxdWF0aW9uU2VwYXJhdGVcIixcbiAgICBcImJsZW5kRnVuY1wiLFxuICAgIFwiYmxlbmRGdW5jU2VwYXJhdGVcIixcbiAgICBcImJ1ZmZlckRhdGFcIixcbiAgICBcImJ1ZmZlclN1YkRhdGFcIixcbiAgICBcImNoZWNrRnJhbWVidWZmZXJTdGF0dXNcIixcbiAgICBcImNsZWFyXCIsXG4gICAgXCJjbGVhckNvbG9yXCIsXG4gICAgXCJjbGVhckRlcHRoXCIsXG4gICAgXCJjbGVhclN0ZW5jaWxcIixcbiAgICBcImNvbG9yTWFza1wiLFxuICAgIFwiY29tcGlsZVNoYWRlclwiLFxuICAgIFwiY29tcHJlc3NlZFRleEltYWdlMkRcIixcbiAgICBcImNvbXByZXNzZWRUZXhTdWJJbWFnZTJEXCIsXG4gICAgXCJjb3B5VGV4SW1hZ2UyRFwiLFxuICAgIFwiY29weVRleFN1YkltYWdlMkRcIixcbiAgICBcImNyZWF0ZUJ1ZmZlclwiLFxuICAgIFwiY3JlYXRlRnJhbWVidWZmZXJcIixcbiAgICBcImNyZWF0ZVByb2dyYW1cIixcbiAgICBcImNyZWF0ZVJlbmRlcmJ1ZmZlclwiLFxuICAgIFwiY3JlYXRlU2hhZGVyXCIsXG4gICAgXCJjcmVhdGVUZXh0dXJlXCIsXG4gICAgXCJjdWxsRmFjZVwiLFxuICAgIFwiZGVsZXRlQnVmZmVyXCIsXG4gICAgXCJkZWxldGVGcmFtZWJ1ZmZlclwiLFxuICAgIFwiZGVsZXRlUHJvZ3JhbVwiLFxuICAgIFwiZGVsZXRlUmVuZGVyYnVmZmVyXCIsXG4gICAgXCJkZWxldGVTaGFkZXJcIixcbiAgICBcImRlbGV0ZVRleHR1cmVcIixcbiAgICBcImRlcHRoRnVuY1wiLFxuICAgIFwiZGVwdGhNYXNrXCIsXG4gICAgXCJkZXB0aFJhbmdlXCIsXG4gICAgXCJkZXRhY2hTaGFkZXJcIixcbiAgICBcImRpc2FibGVcIixcbiAgICBcImRpc2FibGVWZXJ0ZXhBdHRyaWJBcnJheVwiLFxuICAgIFwiZHJhd0FycmF5c1wiLFxuICAgIFwiZHJhd0VsZW1lbnRzXCIsXG4gICAgXCJlbmFibGVcIixcbiAgICBcImVuYWJsZVZlcnRleEF0dHJpYkFycmF5XCIsXG4gICAgXCJmaW5pc2hcIixcbiAgICBcImZsdXNoXCIsXG4gICAgXCJmcmFtZWJ1ZmZlclJlbmRlcmJ1ZmZlclwiLFxuICAgIFwiZnJhbWVidWZmZXJUZXh0dXJlMkRcIixcbiAgICBcImZyb250RmFjZVwiLFxuICAgIFwiZ2VuZXJhdGVNaXBtYXBcIixcbiAgICBcImdldEFjdGl2ZUF0dHJpYlwiLFxuICAgIFwiZ2V0QWN0aXZlVW5pZm9ybVwiLFxuICAgIFwiZ2V0QXR0YWNoZWRTaGFkZXJzXCIsXG4gICAgXCJnZXRBdHRyaWJMb2NhdGlvblwiLFxuICAgIFwiZ2V0QnVmZmVyUGFyYW1ldGVyXCIsXG4gICAgXCJnZXRDb250ZXh0QXR0cmlidXRlc1wiLFxuICAgIFwiZ2V0RXJyb3JcIixcbiAgICBcImdldEV4dGVuc2lvblwiLFxuICAgIFwiZ2V0RnJhbWVidWZmZXJBdHRhY2htZW50UGFyYW1ldGVyXCIsXG4gICAgXCJnZXRQYXJhbWV0ZXJcIixcbiAgICBcImdldFByb2dyYW1QYXJhbWV0ZXJcIixcbiAgICBcImdldFByb2dyYW1JbmZvTG9nXCIsXG4gICAgXCJnZXRSZW5kZXJidWZmZXJQYXJhbWV0ZXJcIixcbiAgICBcImdldFNoYWRlclBhcmFtZXRlclwiLFxuICAgIFwiZ2V0U2hhZGVySW5mb0xvZ1wiLFxuICAgIFwiZ2V0U2hhZGVyUHJlY2lzaW9uRm9ybWF0XCIsXG4gICAgXCJnZXRTaGFkZXJTb3VyY2VcIixcbiAgICBcImdldFN1cHBvcnRlZEV4dGVuc2lvbnNcIixcbiAgICBcImdldFRleFBhcmFtZXRlclwiLFxuICAgIFwiZ2V0VW5pZm9ybVwiLFxuICAgIFwiZ2V0VW5pZm9ybUxvY2F0aW9uXCIsXG4gICAgXCJnZXRWZXJ0ZXhBdHRyaWJcIixcbiAgICBcImdldFZlcnRleEF0dHJpYk9mZnNldFwiLFxuICAgIFwiaGludFwiLFxuICAgIFwiaXNCdWZmZXJcIixcbiAgICBcImlzQ29udGV4dExvc3RcIixcbiAgICBcImlzRW5hYmxlZFwiLFxuICAgIFwiaXNGcmFtZWJ1ZmZlclwiLFxuICAgIFwiaXNQcm9ncmFtXCIsXG4gICAgXCJpc1JlbmRlcmJ1ZmZlclwiLFxuICAgIFwiaXNTaGFkZXJcIixcbiAgICBcImlzVGV4dHVyZVwiLFxuICAgIFwibGluZVdpZHRoXCIsXG4gICAgXCJsaW5rUHJvZ3JhbVwiLFxuICAgIFwicGl4ZWxTdG9yZWlcIixcbiAgICBcInBvbHlnb25PZmZzZXRcIixcbiAgICBcInJlYWRQaXhlbHNcIixcbiAgICBcInJlbmRlcmJ1ZmZlclN0b3JhZ2VcIixcbiAgICBcInNhbXBsZUNvdmVyYWdlXCIsXG4gICAgXCJzY2lzc29yXCIsXG4gICAgXCJzaGFkZXJTb3VyY2VcIixcbiAgICBcInN0ZW5jaWxGdW5jXCIsXG4gICAgXCJzdGVuY2lsRnVuY1NlcGFyYXRlXCIsXG4gICAgXCJzdGVuY2lsTWFza1wiLFxuICAgIFwic3RlbmNpbE1hc2tTZXBhcmF0ZVwiLFxuICAgIFwic3RlbmNpbE9wXCIsXG4gICAgXCJzdGVuY2lsT3BTZXBhcmF0ZVwiLFxuICAgIFwidGV4UGFyYW1ldGVyZlwiLFxuICAgIFwidGV4UGFyYW1ldGVyaVwiLFxuICAgIFwidGV4SW1hZ2UyRFwiLFxuICAgIFwidGV4U3ViSW1hZ2UyRFwiLFxuICAgIFwidW5pZm9ybTFmXCIsXG4gICAgXCJ1bmlmb3JtMWZ2XCIsXG4gICAgXCJ1bmlmb3JtMWlcIixcbiAgICBcInVuaWZvcm0xaXZcIixcbiAgICBcInVuaWZvcm0yZlwiLFxuICAgIFwidW5pZm9ybTJmdlwiLFxuICAgIFwidW5pZm9ybTJpXCIsXG4gICAgXCJ1bmlmb3JtMml2XCIsXG4gICAgXCJ1bmlmb3JtM2ZcIixcbiAgICBcInVuaWZvcm0zZnZcIixcbiAgICBcInVuaWZvcm0zaVwiLFxuICAgIFwidW5pZm9ybTNpdlwiLFxuICAgIFwidW5pZm9ybTRmXCIsXG4gICAgXCJ1bmlmb3JtNGZ2XCIsXG4gICAgXCJ1bmlmb3JtNGlcIixcbiAgICBcInVuaWZvcm00aXZcIixcbiAgICBcInVuaWZvcm1NYXRyaXgyZnZcIixcbiAgICBcInVuaWZvcm1NYXRyaXgzZnZcIixcbiAgICBcInVuaWZvcm1NYXRyaXg0ZnZcIixcbiAgICBcInVzZVByb2dyYW1cIixcbiAgICBcInZhbGlkYXRlUHJvZ3JhbVwiLFxuICAgIFwidmVydGV4QXR0cmliMWZcIixcbiAgICBcInZlcnRleEF0dHJpYjFmdlwiLFxuICAgIFwidmVydGV4QXR0cmliMmZcIixcbiAgICBcInZlcnRleEF0dHJpYjJmdlwiLFxuICAgIFwidmVydGV4QXR0cmliM2ZcIixcbiAgICBcInZlcnRleEF0dHJpYjNmdlwiLFxuICAgIFwidmVydGV4QXR0cmliNGZcIixcbiAgICBcInZlcnRleEF0dHJpYjRmdlwiLFxuICAgIFwidmVydGV4QXR0cmliUG9pbnRlclwiLFxuICAgIFwidmlld3BvcnRcIixcbiAgICBcIm1ha2VYUkNvbXBhdGlibGVcIixcbl07XG5cbmV4cG9ydCBjb25zdCBXRUJHTDJfSU1QTElDSVRfRVhURU5TSU9OUyA9IHtcbiAgICBBTkdMRV9pbnN0YW5jZWRfYXJyYXlzOiB0cnVlLFxuICAgIEVYVF9ibGVuZF9taW5tYXg6IHRydWUsXG4gICAgRVhUX2NvbG9yX2J1ZmZlcl9oYWxmX2Zsb2F0OiB0cnVlLFxuICAgIEVYVF9mcmFnX2RlcHRoOiB0cnVlLFxuICAgIEVYVF9zaGFkZXJfdGV4dHVyZV9sb2Q6IHRydWUsXG4gICAgRVhUX3NSR0I6IHRydWUsXG4gICAgT0VTX2VsZW1lbnRfaW5kZXhfdWludDogdHJ1ZSxcbiAgICBPRVNfc3RhbmRhcmRfZGVyaXZhdGl2ZXM6IHRydWUsXG4gICAgT0VTX3RleHR1cmVfZmxvYXQ6IHRydWUsXG4gICAgT0VTX3RleHR1cmVfaGFsZl9mbG9hdDogdHJ1ZSxcbiAgICBPRVNfdGV4dHVyZV9oYWxmX2Zsb2F0X2xpbmVhcjogdHJ1ZSxcbiAgICBPRVNfdmVydGV4X2FycmF5X29iamVjdDogdHJ1ZSxcbiAgICBXRUJHTF9kZXB0aF90ZXh0dXJlOiB0cnVlLFxuICAgIFdFQkdMX2RyYXdfYnVmZmVyczogdHJ1ZVxufTtcblxuZXhwb3J0IGNvbnN0IFdFQkdMX0VYVEVOU0lPTl9GVU5DVElPTlMgPSB7XG4gICAgY3JlYXRlVmVydGV4QXJyYXk6IFtcIk9FU192ZXJ0ZXhfYXJyYXlfb2JqZWN0XCIsIFwiY3JlYXRlVmVydGV4QXJyYXlPRVNcIl0sXG4gICAgZGVsZXRlVmVydGV4QXJyYXk6IFtcIk9FU192ZXJ0ZXhfYXJyYXlfb2JqZWN0XCIsIFwiZGVsZXRlVmVydGV4QXJyYXlPRVNcIl0sXG4gICAgaXNWZXJ0ZXhBcnJheTogW1wiT0VTX3ZlcnRleF9hcnJheV9vYmplY3RcIiwgXCJpc1ZlcnRleEFycmF5T0VTXCJdLFxuICAgIGJpbmRWZXJ0ZXhBcnJheTogW1wiT0VTX3ZlcnRleF9hcnJheV9vYmplY3RcIiwgXCJiaW5kVmVydGV4QXJyYXlPRVNcIl0sXG4gICAgZHJhd0FycmF5c0luc3RhbmNlZDogW1wiQU5HTEVfaW5zdGFuY2VkX2FycmF5c1wiLCBcImRyYXdBcnJheXNJbnN0YW5jZWRBTkdMRVwiXSxcbiAgICBkcmF3RWxlbWVudHNJbnN0YW5jZWQ6IFtcIkFOR0xFX2luc3RhbmNlZF9hcnJheXNcIiwgXCJkcmF3RWxlbWVudHNJbnN0YW5jZWRBTkdMRVwiXSxcbiAgICB2ZXJ0ZXhBdHRyaWJEaXZpc29yOiBbXCJBTkdMRV9pbnN0YW5jZWRfYXJyYXlzXCIsIFwidmVydGV4QXR0cmliRGl2aXNvckFOR0xFXCJdLFxuICAgIGRyYXdCdWZmZXJzOiBbXCJXRUJHTF9kcmF3X2J1ZmZlcnNcIiwgXCJkcmF3QnVmZmVyc1dFQkdMXCJdXG59O1xuIiwiaW1wb3J0IHtcbiAgICBXRUJHTF9FTlVNUyxcbiAgICBXRUJHTDJfRU5VTVMsXG4gICAgRVhURU5TSU9OX0VOVU1TLFxuICAgIFdFQkdMMl9QQVJBTUVURVJfREVGQVVMVFMsXG4gICAgRlVOQ1RJT05TLFxuICAgIFdFQkdMMl9JTVBMSUNJVF9FWFRFTlNJT05TLFxuICAgIFdFQkdMX0VYVEVOU0lPTl9GVU5DVElPTlNcbn0gZnJvbSBcIi4vd2ViZ2wtYXBpLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb250ZXh0KGNhbnZhcywge3JlcXVpcmVFeHRlbnNpb25zID0gW10sIGNvbnRleHRPcHRpb25zID0ge30sIGZvcmNlV2ViR0wyID0gZmFsc2UsIGZvcmNlV2ViR0wxID0gZmFsc2V9ID0ge30pIHtcbiAgICBsZXQgZ2wsIHZlcnNpb24sIGltcGxpY2l0RXh0ZW5zaW9ucztcblxuICAgIGlmICghZm9yY2VXZWJHTDEpIHtcbiAgICAgICAgZ2wgPSBjYW52YXMuZ2V0Q29udGV4dChcIndlYmdsMlwiLCBjb250ZXh0T3B0aW9ucyk7XG4gICAgICAgIHZlcnNpb24gPSAyO1xuICAgICAgICBpbXBsaWNpdEV4dGVuc2lvbnMgPSBXRUJHTDJfSU1QTElDSVRfRVhURU5TSU9OUztcbiAgICB9XG5cbiAgICBpZiAoIWdsKSB7XG4gICAgICAgIGlmIChmb3JjZVdlYkdMMikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIltXZWJHTFhdIFdlYkdMIDIgdW5hdmFpbGFibGUgYW5kIGZvcmNlV2ViR0wyIGZsYWcgaXMgc2V0LlwiKVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgZ2wgPSBjYW52YXMuZ2V0Q29udGV4dChcIndlYmdsXCIsIGNvbnRleHRPcHRpb25zKSB8fCBjYW52YXMuZ2V0Q29udGV4dChcImV4cGVyaW1lbnRhbC13ZWJnbFwiLCBjb250ZXh0T3B0aW9ucyk7XG4gICAgICAgIHZlcnNpb24gPSAxO1xuICAgICAgICBpbXBsaWNpdEV4dGVuc2lvbnMgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAoIWdsKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJbV2ViR0xYXSBXZWJHTCB1bmF2YWlsYWJsZS5cIilcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXF1aXJlRXh0ZW5zaW9ucy5sZW5ndGg7ICsraSkge1xuICAgICAgICBjb25zdCBleHROYW1lID0gcmVxdWlyZUV4dGVuc2lvbnNbaV07XG4gICAgICAgIGlmICghaW1wbGljaXRFeHRlbnNpb25zW2V4dE5hbWVdICYmICFnbC5nZXRFeHRlbnNpb24oZXh0TmFtZSkpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYFtXZWJHTFhdIEV4dGVuc2lvbiAke2V4dE5hbWV9IHVuYXZhaWxhYmxlLmApO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZ2wpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBjcmVhdGVXZWJHTFhDb250ZXh0KGdsLCB2ZXJzaW9uLCBpbXBsaWNpdEV4dGVuc2lvbnMpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluc3RydW1lbnRGdW5jdGlvbihnbHgsIGZuTmFtZSwgZm4pIHtcbiAgICBpZiAoIWdseC53ZWJnbHgpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIltXZWJHTFhdIE5vdCBhIFdlYkdMWCBjb250ZXh0LlwiKTtcbiAgICB9XG5cbiAgICBjb25zdCBvcmlnRm4gPSBnbHhbZm5OYW1lXS5iaW5kKGdseCk7XG4gICAgZ2x4W2ZuTmFtZV0gPSAoLi4uYXJncykgPT4gZm4ob3JpZ0ZuLCAuLi5hcmdzKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlV2ViR0xYQ29udGV4dChnbCwgY29udGV4dFZlcnNpb24sIGltcGxpY2l0RXh0ZW5zaW9ucykge1xuICAgIGNvbnN0IHdlYmdseCA9IHtcbiAgICAgICAgZ2wsXG4gICAgICAgIGNvbnRleHRWZXJzaW9uLFxuICAgICAgICBleHRlbnNpb25zOiB7fSxcbiAgICAgICAgZXh0ZW5zaW9uRnVuY3Rpb25zOiB7fSxcbiAgICAgICAgaW1wbGljaXRFeHRlbnNpb25zLFxuICAgICAgICBzdXBwb3J0ZWRFeHRlbnNpb25zOiBbXVxuICAgIH07XG5cbiAgICBjb25zdCBnbHggPSB7XG4gICAgICAgIHdlYmdseCxcblxuICAgICAgICBnZXQgY2FudmFzKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMud2ViZ2x4LmdsLmNhbnZhcztcbiAgICAgICAgfSxcblxuICAgICAgICBnZXQgZHJhd2luZ0J1ZmZlcldpZHRoKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMud2ViZ2x4LmdsLmRyYXdpbmdCdWZmZXJXaWR0aDtcbiAgICAgICAgfSxcblxuICAgICAgICBnZXQgZHJhd2luZ0J1ZmZlckhlaWdodCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLndlYmdseC5nbC5kcmF3aW5nQnVmZmVySGVpZ2h0O1xuICAgICAgICB9LFxuXG4gICAgICAgIGdldFBhcmFtZXRlcihwYXJhbSkge1xuICAgICAgICAgICAgaWYgKHRoaXMud2ViZ2x4LmNvbnRleHRWZXJzaW9uID09PSAxICYmIHBhcmFtIGluIFdFQkdMMl9QQVJBTUVURVJfREVGQVVMVFMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gV0VCR0wyX1BBUkFNRVRFUl9ERUZBVUxUU1twYXJhbV07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLndlYmdseC5nbC5nZXRQYXJhbWV0ZXIocGFyYW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGdldFByb2dyYW1QYXJhbWV0ZXIocHJvZ3JhbSwgcGFyYW0pIHtcbiAgICAgICAgICAgIGlmICh0aGlzLndlYmdseC5jb250ZXh0VmVyc2lvbiA9PT0gMSAmJiBwYXJhbSBpbiBXRUJHTDJfUEFSQU1FVEVSX0RFRkFVTFRTKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFdFQkdMMl9QQVJBTUVURVJfREVGQVVMVFNbcGFyYW1dO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy53ZWJnbHguZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcihwcm9ncmFtLCBwYXJhbSk7XG4gICAgICAgICAgICB9ICAgXG4gICAgICAgIH0sXG5cbiAgICAgICAgZ2V0RXh0ZW5zaW9uKGV4dE5hbWUpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLndlYmdseC5pbXBsaWNpdEV4dGVuc2lvbnNbZXh0TmFtZV0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMud2ViZ2x4LmV4dGVuc2lvbnNbZXh0TmFtZV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgZ2V0U3VwcG9ydGVkRXh0ZW5zaW9ucygpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLndlYmdseC5zdXBwb3J0ZWRFeHRlbnNpb25zO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIE9iamVjdC5hc3NpZ24oZ2x4LCBXRUJHTF9FTlVNUywgV0VCR0wyX0VOVU1TLCBFWFRFTlNJT05fRU5VTVMpO1xuXG4gICAgZ2wuZ2V0U3VwcG9ydGVkRXh0ZW5zaW9ucygpLmZvckVhY2goZXh0TmFtZSA9PiB3ZWJnbHguZXh0ZW5zaW9uc1tleHROYW1lXSA9IGdsLmdldEV4dGVuc2lvbihleHROYW1lKSk7XG4gICAgd2ViZ2x4LnN1cHBvcnRlZEV4dGVuc2lvbnMgPSBPYmplY3Qua2V5cyh3ZWJnbHguaW1wbGljaXRFeHRlbnNpb25zKS5jb25jYXQoZ2wuZ2V0U3VwcG9ydGVkRXh0ZW5zaW9ucygpKTtcblxuICAgIEZVTkNUSU9OUy5mb3JFYWNoKGZuID0+IHtcbiAgICAgICAgaWYgKGdseFtmbl0pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChnbFtmbl0pIHtcbiAgICAgICAgICAgIGdseFtmbl0gPSAoLi4uYXJncykgPT4gZ2xbZm5dKC4uLmFyZ3MpO1xuICAgICAgICB9IGVsc2UgaWYgKFdFQkdMX0VYVEVOU0lPTl9GVU5DVElPTlNbZm5dKSB7XG4gICAgICAgICAgICBjb25zdCBbZXh0TmFtZSwgZXh0RnVuY3Rpb25dID0gV0VCR0xfRVhURU5TSU9OX0ZVTkNUSU9OU1tmbl07XG4gICAgICAgICAgICBpZiAod2ViZ2x4LmV4dGVuc2lvbnNbZXh0TmFtZV0pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBleHQgPSB3ZWJnbHguZXh0ZW5zaW9uc1tleHROYW1lXTtcbiAgICAgICAgICAgICAgICBnbHhbZm5dID0gKC4uLmFyZ3MpID0+IGV4dFtleHRGdW5jdGlvbl0oLi4uYXJncyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWdseFtmbl0pIHtcbiAgICAgICAgICAgIGdseFtmbl0gPSAoKSA9PiB7IFxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgW1dlYkdMWF0gRnVuY3Rpb24gXCIke2ZufVwiIG5vdCBhdmFpbGFibGUuYCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZ2x4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==